<?xml version="1.0" encoding="utf-8"?>
<posts>
  <row Id="48" PostTypeId="2" ParentId="42" CreationDate="2014-02-12T04:31:18.417" Score="1" Body="&lt;p&gt;Check this out: &lt;a href=&quot;http://arduino.cc/en/Reference/PortManipulation&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Reference/PortManipulation&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also: &lt;a href=&quot;http://arduino.cc/en/Hacking/PinMapping168&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Hacking/PinMapping168&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for other ports and pins, check put the datasheet for your controller, they're really useful to people who can understand them! :)&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-12T04:31:18.417" CommentCount="1" />
  <row Id="49" PostTypeId="2" ParentId="39" CreationDate="2014-02-12T04:35:03.777" Score="3" Body="&lt;p&gt;The only issue that may create an incompatibility seems to be the IOREF pin next the 5V output pin which is extra on Revision 3 but not in Revision 2.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I just had a look at the board schematics and the shield does not use IOREF.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/hOkcc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Pin 2 is extending IOREF&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, the shield should work correctly with the Uno Revision 2. As far as the extra pins are concerned, I would recommend not damaging them in any way. If you absolutely &lt;em&gt;need&lt;/em&gt; to, then just try to bend them outwards very carefully.&lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="65" LastEditDate="2014-02-12T06:25:23.840" LastActivityDate="2014-02-12T06:25:23.840" CommentCount="0" />
  <row Id="50" PostTypeId="2" ParentId="40" CreationDate="2014-02-12T04:43:09.393" Score="8" Body="&lt;p&gt;Majenko created and maintains &lt;a href=&quot;http://uecide.org/&quot;&gt;UECIDE&lt;/a&gt;. His contributions are pretty epic; I've seen first hand his coding prowess as we &lt;a href=&quot;http://www.chipkit.net/forum/viewtopic.php?f=18&amp;amp;t=2530&quot;&gt;worked together&lt;/a&gt; to get the &lt;a href=&quot;http://www.adafruit.com/products/802&quot;&gt;Adafruit 1.8&quot; TFT Joystick shield&lt;/a&gt; working on the chipKIT platform.&lt;/p&gt;&#xA;" OwnerUserId="79" LastActivityDate="2014-02-12T04:43:09.393" CommentCount="0" />
  <row Id="51" PostTypeId="2" ParentId="27" CreationDate="2014-02-12T04:48:40.460" Score="2" Body="&lt;p&gt;I understand a lot of the spirit with Arduino is being frugal and occasionally trudging through a problem. I use Arduino (and now chipKIT, since it's got 10x the RAM and 10x the clock speed) for my workplace and I need &quot;peripheral functions&quot; to be up to speed and working as quickly as possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I use the sparkfun real time clock in one of my projects and am very happy with it. They also have a &lt;a href=&quot;https://www.sparkfun.com/products/10160&quot; rel=&quot;nofollow&quot;&gt;&quot;Dead on&quot; variant&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="79" LastActivityDate="2014-02-12T04:48:40.460" CommentCount="0" />
  <row Id="52" PostTypeId="1" AcceptedAnswerId="66" CreationDate="2014-02-12T04:54:51.720" Score="9" ViewCount="426" Body="&lt;p&gt;I have a uno that I have been using for 3 years now. I will be using it again in a rather critical project in which failure on the part of the board could be rather expensive and dangerous. So, I would like to be sure that the board is not approaching end of life or going to fail anytime soon. Is there any reliable way to figure out how long the board will function without failing or reduction in performance?&lt;/p&gt;&#xA;" OwnerUserId="65" LastActivityDate="2014-02-13T14:31:27.243" Title="How do I figure out if my board is approaching end of life?" Tags="&lt;arduino-uno&gt;&lt;safety&gt;&lt;reliability&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="14168" PostTypeId="2" ParentId="14044" CreationDate="2015-08-13T18:14:33.040" Score="1" Body="&lt;p&gt;Since you have mentioned that all that you want your friend to do is enter the WiFi SSID and password, I am gonna assume that its where his interaction with the device ends. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, I would recommend using the arduino YUN, it cant get simpler than that. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The YUN is capable of creating an AP network, your friend can connect to it and then go to the arduino home page and then connect to his WiFi. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option would be to use a matrix keypad and LCD screen and have your friend manually enter the details&lt;/p&gt;&#xA;" OwnerUserId="11754" LastEditorUserId="11754" LastEditDate="2015-08-13T18:19:38.383" LastActivityDate="2015-08-13T18:19:38.383" CommentCount="3" />
  <row Id="53" PostTypeId="5" CreationDate="2014-02-12T05:04:26.057" Score="0" Body="&lt;p&gt;Millis is a standard library function. It returns the number of milliseconds since the Arduino board began running the current program. This number will overflow (go back to zero), after approximately 50 days.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For more, see the &lt;a href=&quot;http://arduino.cc/en/Reference/millis&quot; rel=&quot;nofollow&quot;&gt;standard reference&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="48" LastEditDate="2014-02-12T14:39:25.280" LastActivityDate="2014-02-12T14:39:25.280" CommentCount="0" />
  <row Id="54" PostTypeId="4" CreationDate="2014-02-12T05:04:26.057" Score="0" Body="Is a standard library function. It returns the number of milliseconds since the Arduino board began running the current program." OwnerUserId="65" LastEditorUserId="65" LastEditDate="2014-02-12T14:43:11.600" LastActivityDate="2014-02-12T14:43:11.600" CommentCount="0" />
  <row Id="55" PostTypeId="2" ParentId="52" CreationDate="2014-02-12T05:09:43.580" Score="-4" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Edit :&lt;/strong&gt; People who down voted my answer, Ohh common don't be too much foolish&#xA;  ! for that you need to be an electron and go through the circuit&#xA;  itself to check everything is ok or not :)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Plug the board into a USB port on your computer and check that the green LED power indicator on the board illuminates. Standard Arduino boards (Uno, Duemilanove, and Mega) have a green LED power indicator located near the reset switch.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An orange LED near the center of the board (labeled “Pin 13 LED” in the image below) should flash on and off when the board is powered up (boards come from the factory preloaded with software to flash the LED as a simple check that the board is working).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/gDEH4.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the power LED does not illuminate when the board is connected to your computer, the board is probably not receiving power.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The flashing LED (connected to digital output pin 13) is being controlled by code running on the board (new boards are preloaded with the Blink example sketch). If the pin 13 LED is flashing, the sketch is running correctly, which means the chip on the board is working. If the green power LED is on but the pin 13 LED is not flashing, it could be that the factory code is not on the chip. If you are not using a standard board, it may not have a built-in LED on pin 13, so check the documentation for details of your board.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Online guides for getting started with Arduino are available at for &lt;a href=&quot;http://arduino.cc/en/Guide/Windows&quot; rel=&quot;nofollow&quot;&gt;Windows&lt;/a&gt;,  for &lt;a href=&quot;http://arduino.cc/en/Guide/MacOSX&quot; rel=&quot;nofollow&quot;&gt;Mac OS X&lt;/a&gt;, and for &lt;a href=&quot;http://www.arduino.cc/Learning/Linux&quot; rel=&quot;nofollow&quot;&gt;Linux&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="77" LastEditorUserId="77" LastEditDate="2014-02-12T05:21:26.487" LastActivityDate="2014-02-12T05:21:26.487" CommentCount="4" />
  <row Id="56" PostTypeId="1" CreationDate="2014-02-12T05:16:33.357" Score="12" ViewCount="3874" Body="&lt;p&gt;I want to unit test my Arduino code. Ideally, I want to execute and test my code without uploading it to the board. What tools or libraries can help me with this?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is an &lt;a href=&quot;http://radpartbrainmat.blogspot.in/search/label/arduemu&quot;&gt;Arduino emulator&lt;/a&gt; in development which could be useful, but it doesn't yet seem to be ready for use.&lt;/p&gt;&#xA;" OwnerUserId="77" LastEditorUserId="65" LastEditDate="2014-03-09T12:48:53.587" LastActivityDate="2014-04-01T21:55:20.263" Title="What is the best way to unit test my code without controller?" Tags="&lt;programming&gt;&lt;testing&gt;" AnswerCount="3" CommentCount="2" FavoriteCount="3" ClosedDate="2016-01-22T22:12:57.617" />
  <row Id="57" PostTypeId="1" AcceptedAnswerId="84" CreationDate="2014-02-12T05:21:37.753" Score="-4" ViewCount="335" Body="&lt;p&gt;I have not already started to try but I'm a good webmaster and I'm just asking which way is more suitable for sending and keeping data from sensors and I/0 state in a database.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here are some points:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Post versus get&lt;/li&gt;&#xA;&lt;li&gt;MySQL or others types&lt;/li&gt;&#xA;&lt;li&gt;Security layers&lt;/li&gt;&#xA;&lt;li&gt;Graphics render of data's (google API?)&lt;/li&gt;&#xA;&lt;li&gt;PHP, ruby, JavaScript...&lt;/li&gt;&#xA;&lt;li&gt;Able to send data request's to Arduino's&lt;/li&gt;&#xA;&lt;li&gt;Ethernet shield, wifi, I2c ???&lt;/li&gt;&#xA;&lt;li&gt;Access via Android app...&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Anyway, the goal here is to know pros and cons of integrate all my Arduino through database.&lt;/p&gt;&#xA;" OwnerUserId="78" LastEditorUserId="220" LastEditDate="2014-03-01T13:22:38.130" LastActivityDate="2014-03-01T13:22:38.130" Title="What's the best way to put in a database sensors data's" Tags="&lt;web-service&gt;" AnswerCount="1" CommentCount="1" ClosedDate="2014-02-12T15:40:23.073" />
  <row Id="14140" PostTypeId="2" ParentId="1569" CreationDate="2015-08-13T03:46:55.780" Score="-2" Body="&lt;p&gt;It specifies the program to work inside the computer system .The numbers specify the speed.Serial.print specifies what text is going to be displayed&lt;/p&gt;&#xA;" OwnerUserId="11766" LastActivityDate="2015-08-13T03:46:55.780" CommentCount="1" />
  <row Id="59" PostTypeId="2" ParentId="40" CreationDate="2014-02-12T05:34:04.400" Score="11" Body="&lt;p&gt;One rather good IDE extension is the Arduino Mode for Emacs. It allows using a highly versatile and extensible IDE such as Emacs for writing, compiling and uploading code to the Arduino.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The documentation and instructions can be found &lt;a href=&quot;http://www.emacswiki.org/emacs/ArduinoSupport&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="65" LastActivityDate="2014-02-12T05:34:04.400" CommentCount="0" />
  <row Id="60" PostTypeId="1" CreationDate="2014-02-12T05:56:49.120" Score="11" ViewCount="618" Body="&lt;p&gt;What is the best practice to make my Arduino circuit more robust against prototyping mistakes (like shorting pins)? I don't want the controller to release its blue magic smoke while experimenting with it, what precautions can I make while designing a circuit?&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="220" LastEditDate="2014-02-23T15:22:16.377" LastActivityDate="2014-02-23T15:22:16.377" Title="How to prevent breaking my Arduino by mistake?" Tags="&lt;safety&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="2" />
<row Id="14165" PostTypeId="1" CreationDate="2015-08-13T17:24:38.197" Score="1" ViewCount="56" Body="&lt;p&gt;I am trying to find cheap options for displays about 3 x 6 inches to display time, weather, simple clip-art type images, and other marquee messages.  What are my best options to work with arduino if my goal is cost-cutting?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2&quot; x 4&quot; or greater in size&lt;/li&gt;&#xA;&lt;li&gt;40 dpi minimum&lt;/li&gt;&#xA;&lt;li&gt;readable from 15 feet in normal indoor conditions&lt;/li&gt;&#xA;&lt;li&gt;everything else is unimportant to me at this point: RGB, pitch, power draw, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="8451" LastEditorUserId="8451" LastEditDate="2015-08-13T18:37:55.620" LastActivityDate="2015-08-14T00:38:09.920" Title="Solutions for displays?" Tags="&lt;lcd&gt;&lt;display&gt;&lt;components&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="61" PostTypeId="1" AcceptedAnswerId="78" CreationDate="2014-02-12T06:15:47.017" Score="97" ViewCount="160400" Body="&lt;p&gt;I would like to start the development of some basic Arduino projects but I don't own an Arduino board yet. Is there a way I can write my code and emulate/test it using a desktop computer so after my board arrives I just have to upload and run my project on it?&lt;/p&gt;&#xA;" OwnerUserId="87" LastActivityDate="2016-05-17T07:57:51.460" Title="Can I program for Arduino without having a real board?" Tags="&lt;emulation&gt;&lt;testing&gt;" AnswerCount="10" CommentCount="1" FavoriteCount="52" />
<row Id="14139" PostTypeId="1" AcceptedAnswerId="14148" CreationDate="2015-08-13T03:03:30.507" Score="0" ViewCount="42" Body="&lt;p&gt;My code is designed to play a tone when ever pin 3 is high on my Arduino. When I am examine the pins voltage with a multimeter it is always reading below 1 volt. When I examined the voltage off of a osiliscope it is reading the voltage pretty steady at 0.2 to 0.3. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My multimeter reads at 0.26&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/VDZrq.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/VDZrq.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My code is:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;  // put your setup code here, to run once:&#xA;Serial.begin(9600);&#xA;}&#xA;void loop() {&#xA;  // put your main code here, to run repeatedly:&#xA;int input = digitalRead(3);&#xA;Serial.println(input);&#xA;if(input == 1){&#xA;  tone(A5,4000);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My board looks like:&lt;/strong&gt;&#xA;&lt;a href=&quot;http://i.stack.imgur.com/WxcKw.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/WxcKw.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;The bottom of the board looks like:&lt;/strong&gt;&#xA;&lt;a href=&quot;http://i.stack.imgur.com/VmlpH.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/VmlpH.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="8167" LastActivityDate="2015-08-13T08:23:33.317" Title="Arduino LED lighting up when signal is reading low on multimeter" Tags="&lt;sketch&gt;&lt;arduino-pro-mini&gt;&lt;signal-processing&gt;&lt;prototype&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="14140" PostTypeId="2" ParentId="1569" CreationDate="2015-08-13T03:46:55.780" Score="-2" Body="&lt;p&gt;It specifies the program to work inside the computer system .The numbers specify the speed.Serial.print specifies what text is going to be displayed&lt;/p&gt;&#xA;" OwnerUserId="11766" LastActivityDate="2015-08-13T03:46:55.780" CommentCount="1" />
  <row Id="14141" PostTypeId="2" ParentId="14138" CreationDate="2015-08-13T05:04:29.767" Score="0" Body="&#xA;&#xA;&lt;p&gt;If you have just connected a switch to the Arduino pin, like the image below, it will just return &quot;random&quot; undefined results:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/dbixU.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/dbixU.png&quot; alt=&quot;Floating input on switch&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are various ways of avoiding this, including using a pull-down resistor to ensure that, if the switch is open, it will read LOW. For example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/eYepo.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/eYepo.png&quot; alt=&quot;Pull-down resistor&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are other possible techniques as discussed on &lt;a href=&quot;http://gammon.com.au/switches&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One is to change:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;   pinMode(inPin, INPUT);//this time we will set the pin as INPUT&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;to:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;   pinMode(inPin, INPUT_PULLUP);//this time we will set the pin as INPUT&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then wire the switch to &lt;strong&gt;ground&lt;/strong&gt;, not +5 V. That way the pull-up resistor pulls the switch HIGH, and when you close the switch it is LOW.&lt;/p&gt;&#xA;" OwnerUserId="10794" LastActivityDate="2015-08-13T05:04:29.767" CommentCount="0" />
  <row Id="14142" PostTypeId="2" ParentId="5178" CreationDate="2015-08-13T05:22:51.097" Score="1" Body="&lt;p&gt;It is highly likely that the sketch you loaded is causing this.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However, when I press the restart button on the Arduino, the PC will detect it as an Arduino Leonardo bootloader(com 7) but after few seconds it disappears.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For a few seconds after reset the bootloader will configure the board as a USB serial device, awaiting upload of a new sketch. Once that times out it runs the existing code. If the existing code does not configure the USB port (eg. by doing &lt;code&gt;Serial.begin&lt;/code&gt;) then it will cease to enumerate as a USB device. This is perfectly normal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &quot;fix&quot; is to upload a sketch that uses the USB interface. For example, open a serial port, open the keyboard (&lt;code&gt;Keyboard.begin()&lt;/code&gt;) or similar.&lt;/p&gt;&#xA;" OwnerUserId="10794" LastActivityDate="2015-08-13T05:22:51.097" CommentCount="0" />
  <row Id="62" PostTypeId="2" ParentId="27" CreationDate="2014-02-12T06:22:09.293" Score="4" Body="&lt;p&gt;If you don't want to use extra hardware like an Real Time Clock (eg. DSDS1307), you can significantly improve timing accuracy by disabling all unused interrupts. By default Arduino sketches come with various interrupt routines enabled and often they are not used for actually your sketch. Quickest way to find out if you can do without it to try and disable them by issuing &lt;a href=&quot;http://arduino.cc/en/Reference/Interrupts&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;noInterrupts();&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="83" LastActivityDate="2014-02-12T06:22:09.293" CommentCount="1" />
  <row Id="63" PostTypeId="2" ParentId="13" CreationDate="2014-02-12T06:24:58.243" Score="4" Body="&lt;p&gt;The short answer is no.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically, you would need LOTS more ram then even the biggest ATmega has natively.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It &lt;em&gt;is&lt;/em&gt; theoretically possible to add external hardware, and program the ATmega to emulate a more powerful CPU, and run linux on that. However, on a plain arduino, it is not possible.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would be much more realistic to run linux on a Arduino Due, which is basically a AT91SAM3X8E CPU. However, you'd still need to add some additional SRAM and storage. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are things like the Arduino Yun, but that is really a entirely separate linux module on the same PCB as a ATmega32U4, so I don't know if you can really count it as an arduino.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Possibly relevant: &lt;a href=&quot;http://stackoverflow.com/questions/1522146/minimum-configuration-to-run-embedded-linux-on-an-arm-processor&quot;&gt;What does it take to run embedded linux?&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="86" LastActivityDate="2014-02-12T06:24:58.243" CommentCount="0" />
  <row Id="14150" PostTypeId="2" ParentId="14147" CreationDate="2015-08-13T09:38:32.230" Score="1" Body="&lt;p&gt;under the IDE make sure you have set the correct board and comm port. go to tools&gt;&gt;board then choose your board then tools&gt;&gt;Comm to choose the correct comm port. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;is the IDE saying anything about having problems connecting to the board? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;and no re-installing all drivers should not be necessary. &lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T09:38:32.230" CommentCount="6" />
  <row Id="14151" PostTypeId="2" ParentId="14120" CreationDate="2015-08-13T09:52:48.213" Score="0" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;want to measure the movement of 2 points on a material surface as it is stretched and released the points move apart and towards one another. The points are real and tangible. This of pins in cloth and we want to measure the distance between the pins.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the two points can be made then you could use an Ultrasonic range finder. you could have one point be a wall (use balsa wood or something light) then the other could be the range finder. You might have to do a little bit of engineering for attaching the range finder to the pins on the cloth, but I believe it's doable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;heres an amazon link for a generic arduino range finder: &lt;a href=&quot;http://rads.stackoverflow.com/amzn/click/B00F6KLLGG&quot; rel=&quot;nofollow&quot;&gt;http://www.amazon.com/RHX-Ultrasonic-Distance-Measuring-Transducer/dp/B00F6KLLGG/ref=sr_1_2?s=electronics&amp;amp;ie=UTF8&amp;amp;qid=1439459256&amp;amp;sr=1-2&amp;amp;keywords=range+finder+arduino&lt;/a&gt; &lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T09:52:48.213" CommentCount="3" />
  <row Id="14152" PostTypeId="2" ParentId="14106" CreationDate="2015-08-13T10:01:25.767" Score="2" Body="&lt;p&gt;You need to open the .ino file. that is the project file for the Marlin Firmware. then upload that. Also do some research about the settings for Marlin. It isn't just plug and play, you have to enter some information about your individual stepper motors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://solidutopia.com/marlin-firmware-user-guide-basic/&quot; rel=&quot;nofollow&quot;&gt;http://solidutopia.com/marlin-firmware-user-guide-basic/&lt;/a&gt; - heres a guide for Marlin.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;the cpp and h files are c++ files that are apart of the project. the Arduino IDE cannot open these individually. the .ino file is the project file that will allow you to open up the entire project and not just one portion of it.&lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T10:01:25.767" CommentCount="0" />
  <row Id="14153" PostTypeId="1" AcceptedAnswerId="14155" CreationDate="2015-08-13T11:40:34.860" Score="1" ViewCount="53" Body="&lt;p&gt;Looking at my Arduino Uno board, it appears the digital PWM pins are #11, #10, #9, #6, #5 and #3. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;When playing around with the Theremin, it seems that the &lt;code&gt;Tone()&lt;/code&gt; message works on all pins regardless of whether they are marked PWM or not?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can anyone explain what is happening or how this is possible?&lt;/p&gt;&#xA;" OwnerUserId="11775" LastActivityDate="2015-08-13T15:00:50.997" Title="Tone() working on all digital pins?" Tags="&lt;arduino-uno&gt;&lt;pwm&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="14154" PostTypeId="1" CreationDate="2015-08-13T12:00:41.230" Score="0" ViewCount="54" Body="&lt;p&gt;I had an old duemilanove lying around (Which was not working because i accidentially busted the atmega) and I recently bought some atmegas pre-flashed with the UNO bootloader. So I tried to put one of those in it, and it seems to work fine except that I have to select the UNO board in the arduino IDE. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is: Is there anything problematic to be aware of when using the UNO bootloader in an duemilanove?&lt;/p&gt;&#xA;" OwnerUserId="11776" LastEditorUserId="8" LastEditDate="2015-08-13T15:07:13.907" LastActivityDate="2015-08-13T22:29:22.423" Title="Will the Uno bootloader work in the Duemilanove?" Tags="&lt;arduino-uno&gt;&lt;bootloader&gt;&lt;arduino-duemilanove&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="64" PostTypeId="2" ParentId="56" CreationDate="2014-02-12T06:29:21.267" Score="3" Body="&lt;p&gt;Have you looked at the AVR simulator that's part of &lt;a href=&quot;http://www.atmel.com/microsite/atmel_studio6/debugging_simulation.aspx&quot; rel=&quot;nofollow&quot;&gt;Atmel Studio&lt;/a&gt;? Considering Atmel designed the processor, the simulation may very well be running the HDL that was used to produce the MCU itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I suspect if you're doing something involved enough to be using unit-testing, you should probably stop thinking of your device as an &quot;Arduino&quot;, but rather &quot;An ATmega MCU on a PCB&quot;. There are &lt;strong&gt;much&lt;/strong&gt; more information and tools available about ATmega CPUs in general then Arduinos.&lt;/p&gt;&#xA;" OwnerUserId="86" LastEditorUserId="86" LastEditDate="2014-02-12T10:05:16.950" LastActivityDate="2014-02-12T10:05:16.950" CommentCount="0" />
  <row Id="65" PostTypeId="2" ParentId="42" CreationDate="2014-02-12T06:34:29.143" Score="8" Body="&lt;p&gt;The datasheets for the AVR microcontrollers are reasonably good to read. Just Google for the exact controller on your Arduino (eg. ATmege328) and find the &quot;Complete&quot; datasheet on the &lt;em&gt;atmel.com&lt;/em&gt; website. Don't download the &quot;Summary&quot;, it doesn't include a lot of information. Download the datasheet from atmel.com, that is the only location with the most recent documentation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are three registers used in basic IO (check the chapter called &quot;I/O-Ports&quot;):&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Where &lt;em&gt;n&lt;/em&gt; is a port identifier, a letter ranging from A, B, C, ... depending on the number of IO pins your controller has. Each bit in each register represents a single GPIO pin (yes, you need some basic knowledge on binary to fully understand this).&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;DDR&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;, Data Direction Register: This basically configures a pin for either input (0) or output (1). &lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PORT&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;, Port n Data Register: When a pin is set as output, the related bit toggles the output pin high (1) or low (0). When configured as input, this enables a weak pull up resistor on the output pin.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PIN&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;,  Port n Input Register: Use this register to read the current level on a pin that is configured as input.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="83" LastActivityDate="2014-02-12T06:34:29.143" CommentCount="2" />
  <row Id="66" PostTypeId="2" ParentId="52" CreationDate="2014-02-12T06:38:39.020" Score="6" Body="&lt;p&gt;Unfortunately, there isn't much way to really determine &quot;wear&quot; in the context of solid-state electronics.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Probably the things that are most likely to fail are the electrolytic capacitors and the connectors.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;First, if you're using an ATmega CPU for something that could possibly injure someone &lt;strong&gt;CONTACT ATMEL AND TALK ABOUT SAFETY PRECAUTIONS&lt;/strong&gt;. The ATmega CPU used in most of the arduino models is &lt;em&gt;not&lt;/em&gt; rated for use in such situations.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In EVERY datasheet:  &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Atmel products are not intended, authorized, or warranted for use as components in applications intended to support or sustain life.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Now, realistically, this is probably &lt;em&gt;mostly&lt;/em&gt; lawyer repellent, but you should still take appropriate precautions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Really, while there isn't anything on a common arduino board that really wears out except the connectors, &lt;em&gt;why are you trying to save $30 at a potential huge cost?&lt;/em&gt; Just buy a new board.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd also strongly reccomend you chose a board with a SMT ATmega328P, since that removes the IC socket contacts from the list of concerns. If possible, also remove the pin-headers, and solder wires to the board directly. Try to minimize connectors, since they are frequent points of failure.&lt;/p&gt;&#xA;" OwnerUserId="86" LastActivityDate="2014-02-12T06:38:39.020" CommentCount="0" />
  <row Id="67" PostTypeId="2" ParentId="37" CreationDate="2014-02-12T06:43:38.013" Score="7" Body="&lt;p&gt;Find the &lt;code&gt;io__.h&lt;/code&gt; file for your microcontroller, on Linux it is located in &lt;code&gt;/usr/lib/avr/include/avr&lt;/code&gt;, on Windows it will be in a somewhat similar location.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Scroll down to the part that says &lt;code&gt;/* Constants */&lt;/code&gt;. There are couple interesting macros defined there, &lt;code&gt;FLASHEND&lt;/code&gt; being the one you should be interested in. You can use it for example as follows:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#if FLASHEND &amp;gt; 0x8000&#xA;/* Include some extra code when sufficient flash is available. */&#xA;&#xA;#endif&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="83" LastActivityDate="2014-02-12T06:43:38.013" CommentCount="0" />
  <row Id="68" PostTypeId="2" ParentId="40" CreationDate="2014-02-12T06:44:16.880" Score="16" Body="&lt;p&gt;You can use &lt;a href=&quot;http://www.atmel.com/microsite/atmel_studio6/&quot;&gt;AVR Studio&lt;/a&gt; to write programs for Arduinos.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is a plugin that lets you link against and use the arduino libraries from &lt;a href=&quot;https://arduinotemplateexpress.codeplex.com/&quot;&gt;within Atmel Studio&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you've used Microsoft Visual Studio, Atmel Studio is basically a reskin of Visual studio with different compiler backends that target the ATmega series of devices, so you'll feel right at home.&lt;/p&gt;&#xA;" OwnerUserId="86" LastActivityDate="2014-02-12T06:44:16.880" CommentCount="0" />
  <row Id="69" PostTypeId="2" ParentId="12" CreationDate="2014-02-12T07:01:23.777" Score="7" Body="&lt;p&gt;To answer the aspect of your question regarding the &quot;firmware&quot; on the ATmega328p MCU used in most of the Arduino boards:  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is no firmware on the ATmega at all aside from the bootloader. The programs you write are running &lt;em&gt;directly&lt;/em&gt; on the hardware. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are certain &quot;fuse&quot; settings which are set with a &lt;a href=&quot;http://store.atmel.com/PartDetail.aspx?q=p:10500054&quot;&gt;ISP programmer&lt;/a&gt;. However, there are only 24 of them (three bytes), and they largely relate to low-level configuration, and are not what I think you're asking:&lt;br&gt;&#xA;&lt;img src=&quot;http://i.stack.imgur.com/wEPF9.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also the &lt;a href=&quot;http://code.google.com/p/optiboot/&quot;&gt;Bootloader&lt;/a&gt;, which is a small program that sits in a separate segment of the MCU's program memory and allows it to update itself at startup (which is how all arduinos are programmed). However, it only runs for a short period of time at startup, and is completely removed from memory after the MCU has jumped to the main program.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lastly, there are auxiliary MCUs (ATmega16U2/8U2) on most arduino boards that are used as USB-serial interfaces, that &lt;em&gt;can&lt;/em&gt; be updated to behave differently (e.g. emulate a keyboard/mouse), but again, this isn't actually a change to the core processor, so whether it counts as &quot;installing a different firmware&quot; depends on how you define the arduino.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Really, I'd strongly reccomend reading the &lt;a href=&quot;http://www.atmel.com/Images/Atmel-8271-8-bit-AVR-Microcontroller-ATmega48A-48PA-88A-88PA-168A-168PA-328-328P_datasheet.pdf&quot;&gt;ATmega328P datasheet&lt;/a&gt;. This is the documentation for the MCU that basically forms the &quot;Arduino&quot;. It should address what seems to be misconceptions. &lt;/p&gt;&#xA;" OwnerUserId="86" LastActivityDate="2014-02-12T07:01:23.777" CommentCount="0" />
  <row Id="14166" PostTypeId="2" ParentId="14165" CreationDate="2015-08-13T17:39:02.760" Score="1" Body="&lt;p&gt;www.aliexpress.com would be your first go for cheap stuff. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can always chat with the guys and bargain a bit on the price. Do remember that the free shipping option means that it will take nearly a month to arrive&lt;/p&gt;&#xA;" OwnerUserId="11754" LastActivityDate="2015-08-13T17:39:02.760" CommentCount="0" />
  <row Id="70" PostTypeId="2" ParentId="38" CreationDate="2014-02-12T07:08:22.687" Score="1" Body="&lt;p&gt;If RStudio has serial support. Yes, it can talk to a Uno. If it does not. No.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is really a question about RStudio (and actually just pure &lt;a href=&quot;http://en.wikipedia.org/wiki/R_%28programming_language%29&quot; rel=&quot;nofollow&quot;&gt;R&lt;/a&gt;), not arduinos.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Furthermore, RStudio is just an IDE. Therefore, no, &lt;em&gt;RStudio&lt;/em&gt; can &lt;em&gt;not&lt;/em&gt; communicate with an arduino, compile a program, or do much of all aside from edit source-code files. RStudio does not run your code at all. It uses an external interpreter to run your source files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;R&lt;/em&gt;, on the other hand probably &lt;em&gt;can&lt;/em&gt; talk to serial interfaces. The fact that you're using RStudio is entirely irrelevant.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not familliar with R, but a little googling leads me to think that R can talk to serial interfaces without &lt;em&gt;too&lt;/em&gt; much trouble, though I have not been able to find any information about doing so on windows. What platform are you using?&lt;/p&gt;&#xA;" OwnerUserId="86" LastActivityDate="2014-02-12T07:08:22.687" CommentCount="0" />
  <row Id="71" PostTypeId="1" AcceptedAnswerId="76" CreationDate="2014-02-12T07:22:41.363" Score="14" ViewCount="1149" Body="&lt;p&gt;In a project I am using a Seeeduino v3.0 as an Arduino clone. On the seeeduino website it says that &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;It is based on the Duemilanove schematic, 100% compatible to its existing program, shield and IDEs.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In fact I never had any problems with shields or the IDE.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is now: Is the seeeduino and other clones really 100% compatible? The seeeduino board was considerable cheaper then an arduino.&lt;/p&gt;&#xA;" OwnerUserId="94" LastActivityDate="2016-01-07T23:27:27.593" Title="Compatibility between Arduino and Arduino clones" Tags="&lt;clones&gt;" AnswerCount="4" CommentCount="0" FavoriteCount="2" />
  <row Id="72" PostTypeId="2" ParentId="60" CreationDate="2014-02-12T07:33:14.817" Score="7" Body="&lt;p&gt;I don't know if there's &lt;em&gt;one&lt;/em&gt; best practice, but the following might be helpful:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Limit the voltage on input pins to 5.5 V maximum.&lt;/li&gt;&#xA;&lt;li&gt;Do not shorten IO pins.&lt;/li&gt;&#xA;&lt;li&gt;Use pullup or pulldown resistors when conecting switches or pushbuttons.&lt;/li&gt;&#xA;&lt;li&gt;Respect the current limits (for each pin and in total). Use resistors.&lt;/li&gt;&#xA;&lt;li&gt;The Arduino is just the brain, not the power station. If you have to drive higher loads, use simple transistors, Darlington arrays, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="89" LastActivityDate="2014-02-12T07:33:14.817" CommentCount="1" />
  <row Id="74" PostTypeId="1" AcceptedAnswerId="77" CreationDate="2014-02-12T07:36:18.303" Score="13" ViewCount="661" Body="&lt;p&gt;I was looking at getting an enclosure to house my Arduino Uno R3, but I'm not sure if I should also attach a fan.  Does anyone have experience with this?  It doesn't look like much heat is being generated, but with no ventilation except some slits in the enclosure, there won't be much air circulation without a fan.  My concern with adding a fan was the fact that I'd need to power it.&lt;/p&gt;&#xA;" OwnerUserId="99" LastEditorUserId="220" LastEditDate="2014-02-25T01:44:59.277" LastActivityDate="2014-02-25T01:44:59.277" Title="Does Arduino Uno R3 require cooling in a closure?" Tags="&lt;arduino-uno&gt;&lt;enclosure&gt;" AnswerCount="2" CommentCount="2" />
  <row Id="75" PostTypeId="2" ParentId="71" CreationDate="2014-02-12T07:41:33.683" Score="5" Body="&lt;p&gt;If you closely look at the Arduino circuit diagram, You'll notice that it is little more than power supply, a USB-serial interface and the microcontroller itself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The 'hard' part for compatibility is getting the board layout right (which connector goes where on the circuit board), and to load a compatible bootloader in the chip (which is free/open software, so why bother making your own?).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've used several el-cheapo Arduino clones and apart from apparent physical construction (one feels a bit flimsy), they all work just like the 'real thing'. I guess the major difference between original and clone is the quality of the board, the used components and quality of assembly.&lt;/p&gt;&#xA;" OwnerUserId="83" LastActivityDate="2014-02-12T07:41:33.683" CommentCount="0" />
  <row Id="76" PostTypeId="2" ParentId="71" CreationDate="2014-02-12T07:48:19.477" Score="14" Body="&lt;p&gt;Over the years I have used original Arduino boards as well as a multitude of clones of varying provenance, from the excellent &lt;a href=&quot;http://www.simplelabs.co.in/content/induino-r3-low-cost-arduino-r3-usb-clone-board&quot;&gt;InduinoX&lt;/a&gt; that is listed on &lt;a href=&quot;http://playground.arduino.cc/Main/SimilarBoards#goArdComp&quot;&gt;the Arduino site&lt;/a&gt; as an official compatible board, to the very well-made Chinese &lt;a href=&quot;http://youtu.be/DXwezev713s&quot;&gt;Meduino Nano Enhancement&lt;/a&gt; (3.3 / 5 Volt switchable), to dirt-cheap clones from eBay that are sometimes better constructed than the official boards.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is nothing unique or sophisticated about the Arduino board: It's basically just the microcontroller (atMEGA328, atMEGA1280, SAM3X8E or others) and its minimal support hardware. Not much that can go wrong with that little, really. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The two common elements that ensure compatibility across these boards are:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The Arduino bootloader&lt;/li&gt;&#xA;&lt;li&gt;Support for the board within the official Arduino software distribution&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;The bootloader can be replaced with a better or more up-to-date version if one is available for the microcontroller on your board.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The support files can either be found online, or minor edits to the nearest similar board's files can provide the requisite support for the Arduino environment. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short: &lt;em&gt;Yes, clones typically work just as well as the original Arduino, and clones with enhanced features often work far better while retaining compatibility (e.g. InduinoX)&lt;/em&gt;&lt;/p&gt;&#xA;" OwnerUserId="70" LastActivityDate="2014-02-12T07:48:19.477" CommentCount="1" />
  <row Id="77" PostTypeId="2" ParentId="74" CreationDate="2014-02-12T07:48:32.030" Score="14" Body="&lt;p&gt;The only times I had an AVR run hot was when I applied reverse power to it. You'll be fine without a fan for the Arduino board itself, as long as you don't run power hungry peripherals from it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Probably the only thing you really need to check (apart from absolute maximum ratings: 40mA max per IO pin and 200mA max for the whole microcontroller) is the on board voltage regulator (usually three pin device with a heat sink soldered down to the PCB) if you power it from a voltage &gt; 7V or so.&lt;/p&gt;&#xA;" OwnerUserId="83" LastActivityDate="2014-02-12T07:48:32.030" CommentCount="0" />
  <row Id="78" PostTypeId="2" ParentId="61" CreationDate="2014-02-12T08:04:28.930" Score="66" Body="&lt;p&gt;There are a whole slew of Arduino simulators out there, many free, and some paid products as well. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;a href=&quot;http://arduinodev.com/codeblocks/&quot;&gt;CodeBlocks&lt;/a&gt; Arduino development environment includes a free Arduino simulator, still under development but functional. &lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/simuino/&quot;&gt;Simuino&lt;/a&gt; simulates the Arduino Uno and Mega pins - not a pretty-looking realistic simulator, but it works. &lt;/li&gt;&#xA;&lt;li&gt;The Python based &lt;a href=&quot;http://sourceforge.net/projects/arduinosim/&quot;&gt;Arduino Simulator&lt;/a&gt; is another option, that plays well with the official IDE&lt;/li&gt;&#xA;&lt;li&gt;Virtronics &lt;a href=&quot;http://www.virtronics.com.au/Simulator-for-Arduino.html&quot;&gt;Simulator for Arduino&lt;/a&gt; looks promising, but I don't see why I would pay $14.99 for it, when I could buy one or more actual Arduino clones for that price&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Many other Arduino simulators are out there if you search, and new ones are being announced, even crowdfunded, all the time. &lt;/p&gt;&#xA;" OwnerUserId="70" LastActivityDate="2014-02-12T08:04:28.930" CommentCount="6" />
  <row Id="79" PostTypeId="2" ParentId="6" CreationDate="2014-02-12T08:21:43.107" Score="20" Body="&lt;p&gt;Realistically, the biggest power waster on an Arduino board is the linear voltage regulator on it. &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;As long as the microcontroller on the board, the LEDs, or any other peripherals, draw current, the linear regulator wastes power equal to &lt;code&gt;difference between supply and board voltage&lt;/code&gt; x &lt;code&gt;current drawn&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, a first fix would be to disconnect the power indicator LED on the board, and not use any of the other LEDs as far as possible.&#xA;Second, supply the board with as low a voltage as possible that is just sufficient to power the on-board regulator.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;On the original designs, the voltage regulators used do not boast low quiescent current. This means even with nothing drawing power within the board, the regulator itself wastes a fair bit of power all the time it is on. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;An easy fix is to replace the on-board regulator with an LDO (low drop-out linear regulator) rated for extremely low quiescent current. Parametric searches on various vendor sites will yield likely substitutes.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Even with the above steps, the Arduino board does not provide a mechanism to set the LDO into low-power mode, if the LDO chosen supports this. Power efficient designs typically use a &quot;sleep mode&quot; pin on voltage regulators to save a fair bit of energy - not an option here.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Even with all possible power saving modes and tricks applied at the microcontroller level, the Arduino simply is not designed to be an ultra-low-power device out of the box. Having experimented with several non-trivial applications, I have found that the best that is realistically achievable is some 10% to 30% power saving depending on application, since the voltage regulator and the LEDs are going to consume the rest anyway.&lt;/p&gt;&#xA;" OwnerUserId="70" LastEditorUserId="70" LastEditDate="2014-02-17T08:00:10.263" LastActivityDate="2014-02-17T08:00:10.263" CommentCount="1" />
  <row Id="80" PostTypeId="2" ParentId="60" CreationDate="2014-02-12T09:14:23.233" Score="9" Body="&lt;p&gt;Not best practices, but an alternative approach: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider the &lt;a href=&quot;http://ruggedcircuits.com/html/ruggeduino.html&quot;&gt;Ruggeduino&lt;/a&gt; instead of a standard Arduino. At a price ($39.95) comparable with the equivalent Arduino, the Ruggeduino offers:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Resettable fuse on each GPIO pin, i.e. all GPIO pins are protected from short-circuit to ground or other pins&lt;/li&gt;&#xA;&lt;li&gt;All GPIO pins withstand 24 Volts&lt;/li&gt;&#xA;&lt;li&gt;Reverse voltage protection (-30 V) on V&lt;sub&gt;in&lt;/sub&gt;&lt;/li&gt;&#xA;&lt;li&gt;Microcontroller overcurrent protection&lt;/li&gt;&#xA;&lt;li&gt;3.3V and 5V outputs on the board are over-current and short-circuit protected&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Besides the above points specific to the question, the boards are designed to survive harsh environments and various mistakes. Also, the clock is more precise than on the Arduino.&lt;/p&gt;&#xA;" OwnerUserId="70" LastActivityDate="2014-02-12T09:14:23.233" CommentCount="0" />
  <row Id="81" PostTypeId="2" ParentId="40" CreationDate="2014-02-12T09:28:35.477" Score="20" Body="&lt;p&gt;Expanding on &lt;a href=&quot;http://arduino.stackexchange.com/a/43/220&quot;&gt;Fake Name's answer&lt;/a&gt;, there is also &lt;a href=&quot;http://www.visualmicro.com/&quot;&gt;Visual Micro's Arduino plugin&lt;/a&gt; for Atmel Studio (built off Visual Studio). It shares the tools, sources and libraries with the Arduino IDE but provides all the code completion and other features of Visual Studio.&lt;/p&gt;&#xA;" OwnerUserId="102" LastEditorUserId="220" LastEditDate="2015-01-06T01:21:32.080" LastActivityDate="2015-01-06T01:21:32.080" CommentCount="1" />
  <row Id="83" PostTypeId="2" ParentId="61" CreationDate="2014-02-12T09:54:54.233" Score="10" Body="&lt;p&gt;Yes you can, try using &lt;strong&gt;Proteus ISIS&lt;/strong&gt; for simulating your code...&lt;br&gt;&#xA;For full emulation of Arduino, there is shareware program called &lt;strong&gt;VBB&lt;/strong&gt;, I tried it too and it was nice. You can find it &lt;a href=&quot;http://www.virtualbreadboard.com/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="103" LastActivityDate="2014-02-12T09:54:54.233" CommentCount="0" />
  <row Id="84" PostTypeId="2" ParentId="57" CreationDate="2014-02-12T09:55:52.400" Score="3" Body="&lt;p&gt;It depends on your skills and what you have in your Arduino &quot;box&quot;.&#xA;Let's assume you have an ethernet or WiFi shield.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would go with a PHP script (I'm a PHP dev, but any language will fit) that accepts POST requests sent by the board and store them in a SQLite db.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Why SQLite instead of MySQL?&lt;/strong&gt; Well, it's just a matter of data portability. You copy the SQLite file or send it via email and you're done: there are plenty of clients out there to read your db, in *nix based machines is frequently integrated in the OS. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;MySQL requires a sort of &quot;infrastructure&quot; to be written/read.&lt;/p&gt;&#xA;" OwnerUserId="82" LastActivityDate="2014-02-12T09:55:52.400" CommentCount="0" />
  <row Id="85" PostTypeId="1" AcceptedAnswerId="86" CreationDate="2014-02-12T10:22:23.107" Score="13" ViewCount="1715" Body="&lt;p&gt;I wanted to make a fairly simple circuit which would flash a series of LEDs in sequence, using my Arduino Uno (more specifically, a SainSmart clone). I wrote my sketch and it compiled fine. After that, I connected 8 LEDS+resistors to pins 0 through 7, and then connected the Uno to my computer via USB.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've uploaded sketches successfully in the past, so I'm sure my settings and drivers etc. are correct. However, when I tried to upload my sketch this time, it didn't work.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I tried removing everything I'd connected to the Arduino's pins, and suddenly the upload worked again.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why does this happen? Does it mean I have to disconnect everything from the board every time I upload a sketch?&lt;/p&gt;&#xA;" OwnerUserId="42" LastEditorUserId="220" LastEditDate="2014-02-25T06:32:45.650" LastActivityDate="2015-11-03T13:28:11.027" Title="Why can't I upload a sketch while other components/devices are connected to my Uno?" Tags="&lt;serial&gt;&lt;pins&gt;&lt;uploading&gt;&lt;arduino-uno&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="86" PostTypeId="2" ParentId="85" CreationDate="2014-02-12T10:22:23.107" Score="16" Body="&lt;p&gt;The problem is specifically pins 0 and 1. Although they can be used as regular digital IO pins, they also serve as the RX and TX pins for the Uno's serial port. The USB connection (for uploading sketches etc.) is routed to the same pins internally. Unfortunately that means anything connected on pins 0 and 1 can interfere with the serial connection, preventing communication via USB.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short, it's not necessary to disconnect &lt;em&gt;everything&lt;/em&gt; when uploading a sketch. It should only be necessary to disconnect anything from pins 0 and 1. Rather than going through that hassle every time a sketch is uploaded though, it may be best just to avoid using those pins unless necessary (e.g. you run out of other pins, or your project needs a serial connection to another device).&lt;/p&gt;&#xA;" OwnerUserId="42" LastActivityDate="2014-02-12T10:22:23.107" CommentCount="4" />
  <row Id="87" PostTypeId="1" CreationDate="2014-02-12T11:39:41.963" Score="3" ViewCount="10027" Body="&lt;p&gt;I need to simulate my Arduino project with other circuit components before implementing the project. Is there a decent simulator that runs on Mac platform?&lt;/p&gt;&#xA;" OwnerUserId="107" LastActivityDate="2014-02-12T13:12:07.613" Title="Is there an Arduino simulator that runs on Mac OS X?" Tags="&lt;mac-os&gt;&lt;simulator&gt;" AnswerCount="1" CommentCount="0" ClosedDate="2014-02-13T17:01:02.770" />
  <row Id="88" PostTypeId="1" AcceptedAnswerId="89" CreationDate="2014-02-12T11:40:08.950" Score="8" ViewCount="4497" Body="&lt;p&gt;I've been experimenting with an 8x8 LED matrix controlled by an Arduino Uno. As I think is typical, the matrix uses a common anode for each row, and a common cathode for each column. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the moment, I've got all the matrix pins connected directly to IO pins on the Uno, and I haven't had any problems lighting the LEDs one-by-one. Going through the whole matrix like this makes updates a little slow though, meaning the LEDs aren't as bright as I'd like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as I know, I can't safely light up an entire row at once, because an individual pin on the Uno isn't capable of sourcing enough current to drive 8 separate LEDs at the same time (requiring at least 10mA each to be bright enough).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It occurred to me that the reverse might be safer. If I light up an entire column at a time, then each pin only has to source enough current for one LED, which should be no problem. However, it relies on one pin potentially sinking the current from all 8, totalling at least 80mA.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Is this possible, or am I going to fry my board?&lt;/p&gt;&#xA;" OwnerUserId="42" LastEditorUserId="220" LastEditDate="2014-02-25T06:35:14.613" LastActivityDate="2014-02-25T06:35:14.613" Title="Is there a limit on how much current a pin can sink?" Tags="&lt;pins&gt;&lt;arduino-uno&gt;&lt;current&gt;" AnswerCount="2" CommentCount="3" />
  <row Id="89" PostTypeId="2" ParentId="88" CreationDate="2014-02-12T12:00:32.087" Score="9" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;am I going to fry my board?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Pretty likely outcome. Here's why:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Arduino Uno uses the atMEGA328 microcontroller, which has an absolute maximum rating of 40 mA source or sink per GPIO. Also, the total current through the supply or ground rails (i.e. the total of all current OP wants the GPIO pins to sink, or source) is rated to a maximum of &lt;s&gt;150&lt;/s&gt; 200 mA. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Realistically, the current graphs in the atMEGA328 datasheet do not even go all the way to 40 mA, hence it is safest to restrict the current to perhaps 20 mA total per GPIO.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In other words, whether a GPIO is used as source or sink, the limits remain pretty low, and in practice, should be kept much lower than the absolute maximum ratings. Even below absolute maximum, running a microcontroller to too high a temperature reduces its life expectancy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use either BJTs, MOSFETs, or some driver IC such as the &lt;a href=&quot;http://www.ti.com/lit/ds/symlink/uln2003a.pdf&quot;&gt;ULN2003&lt;/a&gt; to actually drive the current through the LEDs.&lt;/p&gt;&#xA;" OwnerUserId="70" LastEditorUserId="70" LastEditDate="2014-02-12T13:39:41.790" LastActivityDate="2014-02-12T13:39:41.790" CommentCount="2" />
  <row Id="90" PostTypeId="2" ParentId="71" CreationDate="2014-02-12T12:36:32.577" Score="3" Body="&lt;p&gt;Check twice ! &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Most clones are exact clones with copies of the flaws that original Arduino board had. Like for example Arduino Nano not having proper RESET and TEST pin connection of FT232RL USB-serial bridge. This flaw may lead to FT232RL not responding to PC and was eventually fixed in later revisions of Arduino Nano board. Some clones were not updated.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another &quot;not exactly Arduino clones&quot; example are numerous boards with CP2102 USB to serial bridge instead of FT232RL. This may pass unnoticed, but may give frustration when one clone board connects and works with your PC, but another generates system complains on missing drivers.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So again - be prepared !&lt;/p&gt;&#xA;" OwnerUserId="32" LastActivityDate="2014-02-12T12:36:32.577" CommentCount="0" />
  <row Id="91" PostTypeId="1" AcceptedAnswerId="92" CreationDate="2014-02-12T12:43:33.707" Score="11" ViewCount="724" Body="&lt;p&gt;I currently have a Mega2560 with the LCD4884 Shield. The Shield is good for putting out text and simple pixel images. But I am wondering if there is something that has a full range of colours that would work with the Arduino? The screen size would only have to be a few inches in size.&lt;/p&gt;&#xA;" OwnerUserId="114" LastActivityDate="2014-02-23T00:37:25.183" Title="Is there a color LCD display for an arduino?" Tags="&lt;lcd&gt;&lt;shields&gt;" AnswerCount="3" CommentCount="1" />
  <row Id="92" PostTypeId="2" ParentId="91" CreationDate="2014-02-12T13:06:14.843" Score="7" Body="&lt;p&gt;There are actually several shields that have color screens on them. Many of the shields are just regular mini TFT displays, however there are also touch screen ones.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.adafruit.com/products/802?gclid=CK3Mk63SxrwCFedlOgodA3IABQ&quot;&gt;Here is one&lt;/a&gt; from Adafruit that includes a MicroSD holder and a Joystick.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.radioshack.com/product/index.jsp?productId=12688460&amp;amp;CAWELAID=120125420000001702&amp;amp;catargetid=120125420000031766&amp;amp;cadevice=c&amp;amp;cagpspn=pla&amp;amp;gclid=CMbdyJ_TxrwCFW1nOgodHF4AGg&quot;&gt;Here is one&lt;/a&gt; from Radio Shack that features a 2.8 inch screen with touch capabilities &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as screen size, many of the screens are only about an 1 inch across, however the biggest I have ever been able to find are 2.8 in.&lt;/p&gt;&#xA;" OwnerUserId="24" LastActivityDate="2014-02-12T13:06:14.843" CommentCount="4" />
  <row Id="93" PostTypeId="2" ParentId="87" CreationDate="2014-02-12T13:12:07.613" Score="1" Body="&lt;p&gt;There is a decent program called &lt;a href=&quot;http://virtronics.com.au/Simulator-for-Arduino.html&quot; rel=&quot;nofollow&quot;&gt;Simulator for Arduino&lt;/a&gt; made by Virtronics. Although it is made to run only in windows, you could run it in a &lt;a href=&quot;http://wiki.winehq.org/MacOSX#head-43b0651931c700b0f796ab7d5280a08eb58d51e0&quot; rel=&quot;nofollow&quot;&gt;WINE environment&lt;/a&gt;. WINE allows windows programs to be ran in Mac and Linux OS.&lt;/p&gt;&#xA;" OwnerUserId="24" LastActivityDate="2014-02-12T13:12:07.613" CommentCount="2" />
  <row Id="95" PostTypeId="2" ParentId="91" CreationDate="2014-02-12T13:27:35.770" Score="5" Body="&lt;p&gt;There's also a &lt;a href=&quot;http://www.adafruit.com/products/1480&quot;&gt;2.2&quot; Adafruit TFT&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The nice things about the Adafruit displays are:&#xA;i) library support for both the &lt;a href=&quot;https://github.com/adafruit/Adafruit_ILI9340&quot;&gt;display&lt;/a&gt; and the &lt;a href=&quot;https://github.com/adafruit/Adafruit-GFX-Library&quot;&gt;graphics core library&lt;/a&gt;. So it's easy to get it up and running.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The built in frame buffer reduces resource requirements on Arduino.&lt;/p&gt;&#xA;" OwnerUserId="113" LastActivityDate="2014-02-12T13:27:35.770" CommentCount="0" />
  <row Id="96" PostTypeId="1" AcceptedAnswerId="164" CreationDate="2014-02-12T13:41:46.053" Score="11" ViewCount="615" Body="&lt;p&gt;We have an LED strip connected to output 6 and is powered by the Uno board itself.  Shouldn't be drawing too much current, only have 10 elements on the LED strip.  While this LED strip is connected to the Uno, I noticed that the regulator is getting very hot.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One thing we haven't done yet is to power the LED strips from an external source, which will be necessary since there will be many strips.  At the moment, the students are simply trying to debug their program with the small strip.&lt;/p&gt;&#xA;" OwnerUserId="118" LastActivityDate="2014-02-13T14:06:47.320" Title="Why is the regulator very hot?" Tags="&lt;power&gt;&lt;heat&gt;" AnswerCount="3" CommentCount="11" />
  <row Id="97" PostTypeId="2" ParentId="61" CreationDate="2014-02-12T13:47:34.540" Score="45" Body="&lt;p&gt;I like to use &lt;a href=&quot;http://123d.circuits.io/&quot;&gt;123dcircuits.io&lt;/a&gt; for this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's cloud based and has some nice features including PCB design and collaboration.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;IMO the Arduino simulation and capability is impressive and intuitive.&lt;/p&gt;&#xA;" OwnerUserId="113" LastActivityDate="2014-02-12T13:47:34.540" CommentCount="3" />
  <row Id="98" PostTypeId="2" ParentId="52" CreationDate="2014-02-12T13:49:35.820" Score="2" Body="&lt;p&gt;One of the sections of the Arduino that is likely to become unreliable over time is its memory. There are &lt;a href=&quot;http://arduino.cc/en/Tutorial/Memory&quot; rel=&quot;nofollow&quot;&gt;three pools of memory&lt;/a&gt; in the microcontroller used on avr-based Arduino boards:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Flash memory (program space), is where the Arduino sketch is stored.&lt;/li&gt;&#xA;&lt;li&gt;SRAM (static random access memory) is where the sketch creates and manipulates variables when it runs.&lt;/li&gt;&#xA;&lt;li&gt;EEPROM is memory space that programmers can use to store long-term information.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The memory is one part of the board that can be checked and verified, and thus evaluated for reliability/health. A very basic way to check memory would be to write a certain 8-bit pattern (byte character) over every address in the memory and then read the value present from every address. If the value that was written matches the value that is read, then that specific 8 bit block in memory is functioning correctly at the present moment. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Wear in ROM memory usually occurs in a blockwise pattern i.e. n*8-bit blocks become degraded over time. So, for a 2K byte ROM chip, the health of the chip can be estimated by writing and reading from every byte on the chip, and calculating the percentage of correctly functioning blocks. If the percentage of failed blocks is significant (15%-20%), that means that the memory is likely to fail soon.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The test code can be written using separate methods for each of the memory sections.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;SRAM&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Any variables declared statically or dynamically are allocated on the SRAM. So, we could declare a large character array (~2000) and fill every element with 255 (all bits 1). Then, we could attempt to read each of those elements and see if the value being read is indeed 255. &lt;/p&gt;&#xA;&#xA;&lt;h3&gt;EEPROM&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;The EEPROM can be manipulated using the &lt;a href=&quot;http://www.arduino.cc/en/Reference/EEPROM&quot; rel=&quot;nofollow&quot;&gt;EEPROM library&lt;/a&gt;. The library provides functions to read and write from specific locations in the EEPROM. So, all memory addresses can be tested by simply looping over the entire memory &#xA;space. &lt;em&gt;This operation will require 500 writes and reads.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Depending on the board usage, EEPROM is most likely to fail first but is not critical to board operation. &lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Flash&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;Data can be stored on the flash memory using the &lt;a href=&quot;http://www.arduino.cc/en/Reference/PROGMEM&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;PROGMEM&lt;/code&gt;&lt;/a&gt; directive. Similar to SRAM, a large array can be declared and initialized here. Then, values can be read and checked.&lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="65" LastEditDate="2014-02-13T14:31:27.243" LastActivityDate="2014-02-13T14:31:27.243" CommentCount="5" />
  <row Id="99" PostTypeId="2" ParentId="96" CreationDate="2014-02-12T14:08:24.913" Score="7" Body="&lt;p&gt;A regulator normally get hot when is driven a current near to the maximum that could be driven, and its a normal thing the regulator keep warm. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;A normal regulator like &lt;a href=&quot;http://www.fairchildsemi.com/ds/LM/LM7805.pdf&quot;&gt;LM7805&lt;/a&gt; could work until 125 C°. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you try to drive more current that it can probably it will burn, so, maybe its time to you change your power supply to an external one to keep safe your Arduino board.&lt;/p&gt;&#xA;" OwnerUserId="3" LastActivityDate="2014-02-12T14:08:24.913" CommentCount="0" />
  <row Id="100" PostTypeId="2" ParentId="96" CreationDate="2014-02-12T14:16:50.190" Score="9" Body="&lt;p&gt;If you power the Arduino with an external power supply the on board regulator has to &lt;em&gt;dissipate&lt;/em&gt; the voltage difference between input and 5VDC at the total current you draw from the board. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As Klaus Warzecha wrote in an &lt;a href=&quot;http://arduino.stackexchange.com/questions/60/how-to-prevent-breaking-my-arduino-by-mistake/72#72&quot;&gt;answer&lt;/a&gt; to &lt;a href=&quot;http://arduino.stackexchange.com/questions/60/how-to-prevent-breaking-my-arduino-by-mistake&quot;&gt;another question&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The Arduino is just the brain, not the power station.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the output voltage of your power supply is 12V, then the regulator will be dissipating 12-5V = 7 V at the total current drawn. Total dissipated power for eg. 150mA (just an estimate) would be P = V × I = 7 × 0.150 = 1W&#xA;The regulator will be pretty hot from dissipating 1W. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Mind you that the current is not limited to 150mA, enough LEDs can easily increase current and power. If the regulator is stressed (often) enough, sooner or later it will fail. It is better practice to power any load directly from the external power supply, taking the higher voltage into account.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="83" LastEditDate="2014-02-12T14:28:41.203" LastActivityDate="2014-02-12T14:28:41.203" CommentCount="0" />
  <row Id="101" PostTypeId="2" ParentId="40" CreationDate="2014-02-12T14:57:09.747" Score="15" Body="&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Vim_%28text_editor%29&quot;&gt;vim&lt;/a&gt; can be used for Arduino development, but it will take some configuration (as is the way of vim). You'll need the &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2654&quot;&gt;syntax file&lt;/a&gt; and &lt;a href=&quot;https://github.com/tclem/vim-arduino&quot;&gt;this plugin&lt;/a&gt; that enables you to compile and deploy from vim.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://twitter.com/grantlucas&quot;&gt;Grant Lucas&lt;/a&gt; produced a great write-up on getting your environment situation squared away:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;&lt;a href=&quot;http://grantlucas.com/posts/2012/09/using-vim-arduino-development&quot;&gt;Using Vim for Arduino development&lt;/a&gt;&lt;/h2&gt;&#xA;  &#xA;  &lt;p&gt;Here's a quick post on setting up Vim for Arduino development instead&#xA;  of using the Arduino IDE. If you're a heavy Vim user, it can be a bit&#xA;  of a shock to go into a different editor. Thankfully the setup is&#xA;  pretty easy to get this all working with Vim. This post is assuming&#xA;  you are comfortable with how Vim is setup and ideally already have an&#xA;  environment that works for you.&lt;/p&gt;&#xA;  &#xA;  &lt;h3&gt;Install the Arduino IDE&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;&lt;em&gt;Wait. What?!?&lt;/em&gt; I hear you say. I know, I know. We're not actually using the Arduino IDE but we need it for some configuration and the&#xA;  files it installs. The Vim plugin we'll be using ties into what the&#xA;  IDE installs and configures so it's needed. You can download the IDE&#xA;  from the &lt;a href=&quot;http://arduino.cc/en/Main/Software&quot;&gt;Arduino site&lt;/a&gt;.&lt;/p&gt;&#xA;  &#xA;  &lt;h3&gt;Install vim-arduino plugin&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;To get the main goodness of compiling, monitoring and deploying to an&#xA;  Arduino, grab the latest version of &lt;a href=&quot;https://github.com/tclem/vim-arduino&quot;&gt;vim-arduino&lt;/a&gt;. Install it in&#xA;  your .vim folder using what ever method you use to manage your Vim&#xA;  plugins. &lt;strong&gt;Hint:&lt;/strong&gt; I'd recommend &lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;Pathogen&lt;/a&gt; as it makes installing&#xA;  as simple as dropping the plugin folder into a bundle folder.&lt;/p&gt;&#xA;  &#xA;  &lt;h3&gt;Vim syntax file&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;Next up is to get the syntax file so we can have nice colour coding&#xA;  for .pde and .ino files. Download the latest &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=2654&quot;&gt;arduino.vim&lt;/a&gt; and&#xA;  install it in your Vim syntax folder. To get the syntax to apply to&#xA;  the correct file types add the following to your vimrc file&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;au BufRead,BufNewFile *.pde set filetype=arduino&#xA;au BufRead,BufNewFile *.ino set filetype=arduino&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;  &#xA;  &lt;h3&gt;Configuring the Arduino IDE&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;Before trying to compile and deploy with Vim, get it all working with&#xA;  the Arduino IDE first as the Vim plugin just calls from the settings&#xA;  saved by the IDE. If it's working in the IDE, it should work in Vim.&#xA;  Make sure you select the right tty.usbmodem* serial port from Tools &gt;&#xA;  Serial Port in the IDE. &lt;strong&gt;Note:&lt;/strong&gt; This will only show when the Arduino&#xA;  is plugged in.&lt;/p&gt;&#xA;  &#xA;  &lt;h3&gt;Working from Vim&lt;/h3&gt;&#xA;  &#xA;  &lt;p&gt;Once you can communicate with your Arduino from the IDE you should be&#xA;  fully good to go with Vim. You shouldn't have to open the IDE unless&#xA;  you want some example code. Open up your sketch file in Vim and use&#xA;  &lt;code&gt;&amp;lt;Leader&amp;gt;ac&lt;/code&gt; to compile a sketch, &lt;code&gt;&amp;lt;Leader&amp;gt;ad&lt;/code&gt; to compile and then&#xA;  deploy to the connected Arduino and &lt;code&gt;&amp;lt;Leader&amp;gt;as&lt;/code&gt; to open a new window&#xA;  with &lt;code&gt;screen&lt;/code&gt; to monitor the serial output from the Arduino.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="4" LastActivityDate="2014-02-12T14:57:09.747" CommentCount="3" />
  <row Id="104" PostTypeId="1" CreationDate="2014-02-12T15:31:08.343" Score="9" ViewCount="3940" Body="&lt;p&gt;Is there any easy way to upload a program/sketch from an iPad or Android tablet without adding extra an shield (Bluetooth or Wi-Fi)?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If not, can it be done using shield? Which shield is preferred?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also what are the IDE options available?&lt;/p&gt;&#xA;" OwnerUserId="123" LastEditorUserId="4" LastEditDate="2014-02-12T17:00:54.183" LastActivityDate="2015-11-14T07:08:44.313" Title="Is it possible to upload a program from a tablet?" Tags="&lt;uploading&gt;&lt;ide&gt;&lt;android&gt;" AnswerCount="8" CommentCount="2" FavoriteCount="1" />
  <row Id="105" PostTypeId="1" AcceptedAnswerId="116" CreationDate="2014-02-12T15:31:17.143" Score="14" ViewCount="25580" Body="&lt;p&gt;I am not very skilled with the C Language and I was wondering if there is a way in which python could be used to program an Arduino. This would most likely require a different IDE in order to be able to debug the scripts them self. &lt;/p&gt;&#xA;" OwnerUserId="24" LastEditorUserId="65" LastEditDate="2014-02-12T15:59:32.043" LastActivityDate="2015-05-21T08:21:00.880" Title="Programming an Arduino using Python, rather than C/C++" Tags="&lt;programming&gt;&lt;python&gt;" AnswerCount="7" CommentCount="4" />
  <row Id="106" PostTypeId="2" ParentId="104" CreationDate="2014-02-12T15:46:09.823" Score="3" Body="&lt;p&gt;Unfortunately Apple doesn't allow apps that implement programming languages. This being said, it is unclear why they would not allow an app that has to do with the Arduino IDE due to the fact that the code doesn't actually run on the Ipad itself. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;See &lt;a href=&quot;http://www.libertypages.com/clarktech/?p=1690&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; for more Info.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As far as an Android IDE, I have heard that there are a few people working on different IDEs that sends the code to the Arduino over the internet, although they have not been released yet, and the details are still a bit unclear.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Source:&#xA;&lt;a href=&quot;http://forum.arduino.cc/index.php?topic=61305.0&quot; rel=&quot;nofollow&quot;&gt;http://forum.arduino.cc/index.php?topic=61305.0&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="24" LastEditorUserId="24" LastEditDate="2014-02-12T16:11:44.437" LastActivityDate="2014-02-12T16:11:44.437" CommentCount="1" />
  <row Id="107" PostTypeId="5" CreationDate="2014-02-12T15:47:38.990" Score="0" Body="&lt;p&gt;The Arduino Uno is the most common and one of the newest Arduino boards. It has 14 digital I/O pins and 6 analog input pins. There are three different versions of the Uno: R1, R2, and R3.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Microcontroller: ATmega328&lt;/li&gt;&#xA;&lt;li&gt;Operating Voltage: 5V&lt;/li&gt;&#xA;&lt;li&gt;Input Voltage (recommended): 7-12V&lt;/li&gt;&#xA;&lt;li&gt;Input Voltage (limits): 6-20V&lt;/li&gt;&#xA;&lt;li&gt;Digital I/O Pins: 14 (of which 6 provide PWM output)&lt;/li&gt;&#xA;&lt;li&gt;Analog Input Pins: 6&lt;/li&gt;&#xA;&lt;li&gt;DC Current per I/O Pin: 40 mA&lt;/li&gt;&#xA;&lt;li&gt;DC Current for 3.3V Pin: 50 mA&lt;/li&gt;&#xA;&lt;li&gt;Flash Memory: 32 KB (ATmega328) of which 0.5 KB used by bootloader&lt;/li&gt;&#xA;&lt;li&gt;SRAM: 2 KB (ATmega328)&lt;/li&gt;&#xA;&lt;li&gt;EEPROM: 1 KB (ATmega328)&lt;/li&gt;&#xA;&lt;li&gt;Clock Speed: 16 MHz&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://arduino.cc/en/Main/ArduinoBoardUno&quot; rel=&quot;nofollow&quot;&gt;Official Arduino Uno&lt;/a&gt; page.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The main limitation with the Uno is the Uno's lack of SRAM or flash memory. However, the Uno is the most commonly used Arduino board. It is $30, and is compatible with many shields.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also consider using more specific tags to your problem, such as &lt;a href=&quot;/questions/tagged/programming&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;programming&amp;#39;&quot; rel=&quot;tag&quot;&gt;programming&lt;/a&gt; or &lt;a href=&quot;/questions/tagged/serial&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;serial&amp;#39;&quot; rel=&quot;tag&quot;&gt;serial&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="35" LastEditDate="2014-02-25T06:34:09.577" LastActivityDate="2014-02-25T06:34:09.577" CommentCount="0" />
  <row Id="108" PostTypeId="4" CreationDate="2014-02-12T15:47:38.990" Score="0" Body="The Arduino Uno is the most common and one of the newest Arduinos, based on the ATmega328 microcontroller. Use this tag when asking a question specific to an Uno, not just a general Arduino question. Also consider using more specific tags to your problem." OwnerUserId="35" LastEditorUserId="35" LastEditDate="2014-02-25T06:32:21.537" LastActivityDate="2014-02-25T06:32:21.537" CommentCount="0" />
  <row Id="109" PostTypeId="5" CreationDate="2014-02-12T15:58:37.333" Score="0" Body="&lt;p&gt;Ethernet can be used for communication between an Arduino and a computer. It is defined as &lt;em&gt;a system for connecting a number of computer systems to form a local area network, with protocols to control the passing of information and to avoid simultaneous transmission by two or more systems&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There is also an &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoBoardEthernet&quot; rel=&quot;nofollow&quot;&gt;Arduino Ethernet board&lt;/a&gt;, for which you should use the tag &lt;a href=&quot;/questions/tagged/arduino-ethernet&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;arduino-ethernet&amp;#39;&quot; rel=&quot;tag&quot;&gt;arduino-ethernet&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Additionally, there is an &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoEthernetShield&quot; rel=&quot;nofollow&quot;&gt;Arduino Ethernet Shield&lt;/a&gt;. Use this tag for the shield.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://arduino.cc/en/uploads/Main/ArduinoEthernetShield_R3_Front.jpg&quot; &gt; &lt;em&gt;&lt;a href=&quot;http://arduino.cc/en/Main/ArduinoEthernetShield&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Main/ArduinoEthernetShield&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="220" LastEditDate="2014-03-18T22:25:31.173" LastActivityDate="2014-03-18T22:25:31.173" CommentCount="0" />
  <row Id="110" PostTypeId="4" CreationDate="2014-02-12T15:58:37.333" Score="0" Body="Ethernet can be used for communication between an Arduino and a computer, server, or website. For question concerning the Arduino Ethernet board, use the tag &quot;arduino-ethernet&quot; instead." OwnerUserId="37" LastEditorUserId="220" LastEditDate="2014-02-23T20:40:53.357" LastActivityDate="2014-02-23T20:40:53.357" CommentCount="0" />
  <row Id="111" PostTypeId="5" CreationDate="2014-02-12T16:02:26.177" Score="0" Body="&lt;p&gt;Uploading is the process of updating or changing the sketch on the Arduino board. It does not refer to uploading to a server or a website.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/ArduinoUnoB.jpg/799px-ArduinoUnoB.jpg&quot; &gt;&#xA;&lt;em&gt;&lt;a href=&quot;http://commons.wikimedia.org/wiki/File%3aArduinoUnoB.jpg&quot; rel=&quot;nofollow&quot;&gt;http://commons.wikimedia.org/wiki/File:ArduinoUnoB.jpg&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;h2&gt;Upload process:&lt;/h2&gt;&#xA;  &#xA;  &lt;p&gt;Sketches are uploaded by avrdude.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;The upload process is also controlled by variables in the boards and main preferences files. Those in the boards file include:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;lt;BOARD&gt;.upload.protocol: the protocol that avrdude should use to talk to the board (typically &quot;stk500&quot;).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;lt;BOARD&gt;.upload.speed: the speed (baud rate) avrdude should use when uploading sketches (typically &quot;19200&quot;).&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&amp;lt;BOARD&gt;.upload.maximum_size: the maximum size for a sketch on the&#xA;  board (dependent on the chip and the size of the bootloader). &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;And in the main preferences file:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;upload.verbose: whether or not to dump debugging messages while upload a sketch to a board (defaults to &quot;false&quot;).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://arduino.cc/en/Hacking/BuildProcess&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Hacking/BuildProcess&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once the code is transferred to the board, then [if the board has auto-reset], the board will reset and the sketch will be run.&lt;/p&gt;&#xA;" OwnerUserId="84" LastEditorUserId="84" LastEditDate="2014-05-03T12:33:31.970" LastActivityDate="2014-05-03T12:33:31.970" CommentCount="0" />
  <row Id="112" PostTypeId="4" CreationDate="2014-02-12T16:02:26.177" Score="0" Body="Uploading is the process of updating or changing the sketch on the Arduino board. It does not refer to uploading to a server or a website." OwnerUserId="220" LastEditorUserId="220" LastEditDate="2014-02-23T21:05:52.753" LastActivityDate="2014-02-23T21:05:52.753" CommentCount="0" />
  <row Id="113" PostTypeId="1" AcceptedAnswerId="162" CreationDate="2014-02-12T16:04:13.967" Score="10" ViewCount="1617" Body="&lt;p&gt;The function &lt;code&gt;millis&lt;/code&gt; would be running in the span of 100+ microseconds or less. Is there a reliable way to go about measuring the time taken by a single millis call?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One approach that comes to mind is using &lt;code&gt;micros&lt;/code&gt;, however, a call to &lt;code&gt;micros&lt;/code&gt; will include the time taken by the function call of &lt;code&gt;micros&lt;/code&gt; itself as well, so depending on how long micros takes, the measurement for &lt;code&gt;millis&lt;/code&gt; may be off.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I need to find this as an application I am working on requires accurate time measurements for every step taken in the code, including &lt;code&gt;millis&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="65" LastActivityDate="2016-04-11T22:08:37.307" Title="Is it possible to find the time taken by millis?" Tags="&lt;time&gt;&lt;millis&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="114" PostTypeId="2" ParentId="105" CreationDate="2014-02-12T16:18:01.803" Score="6" Body="&lt;p&gt;Yes, it is (somewhat) possible to program the Arduino using Python. One such project on Github is the &lt;a href=&quot;http://github.com/vascop/Python-Arduino-Proto-API-v2&quot;&gt;Python Arduino Prototyping API v2&lt;/a&gt;. It provides very basic functionality such as digital I/O and analog I/O.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This can be used for very simple projects.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;*This project is a bit of a hack at &quot;programming&quot; the board using the serial connection. It passes the commands over the serial connection to a sketch running on the board which then &quot;executes&quot; the Python command.&lt;/p&gt;&#xA;" OwnerUserId="65" LastActivityDate="2014-02-12T16:18:01.803" CommentCount="3" />
  <row Id="115" PostTypeId="2" ParentId="38" CreationDate="2014-02-12T16:19:51.607" Score="0" Body="&lt;p&gt;I can't seem to figure out directly how to read from a serial port using R; While there does seem to have been at least &lt;a href=&quot;https://biostatmatt.com/archives/112&quot; rel=&quot;nofollow&quot;&gt;one attempt&lt;/a&gt; to provide this, it's not clear that it ever graduated to something supported or easily installable. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having said that, R does have &lt;a href=&quot;http://stat.ethz.ch/R-manual/R-patched/library/utils/html/read.socket.html&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;read.socket&lt;/code&gt; and &lt;code&gt;write.socket&lt;/code&gt;&lt;/a&gt;, which I believe would make it easy enough to use through &lt;a href=&quot;http://ser2net.sourceforge.net&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;ser2net&lt;/code&gt;&lt;/a&gt;, which exposes a serial-port as a socket. &lt;/p&gt;&#xA;" OwnerUserId="13" LastActivityDate="2014-02-12T16:19:51.607" CommentCount="0" />
  <row Id="116" PostTypeId="2" ParentId="105" CreationDate="2014-02-12T16:28:12.037" Score="9" Body="&lt;p&gt;It's going to be extremely difficult to get any kind of Python script running directly on the Arduino. The reason is that it's an interpreted language, so you would need the interpreter on-board in addition to the plain text script. There's probably not going to be enough memory for all of that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Your best bet would probably be finding a way to compile a Python script to native machine code (which is how C/C++ works). I believe there are projects around to do something like that for other platforms, but (as far as I know) none which does it successfully for Arduino yet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You might find some more useful information on this question at Stack Overflow: &lt;a href=&quot;http://stackoverflow.com/questions/8114916/is-there-a-way-to-compile-python-code-onto-an-arduino-uno&quot;&gt;Is there a way to &quot;compile&quot; Python code onto an Arduino (Uno)&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="42" LastActivityDate="2014-02-12T16:28:12.037" CommentCount="1" />
  <row Id="117" PostTypeId="1" AcceptedAnswerId="119" CreationDate="2014-02-12T16:42:31.307" Score="33" ViewCount="10574" Body="&lt;p&gt;Is it possible to have more than 14 output pins on the Arduino, I am working on a project in which I need to light up several LEDs individually. I only have an Arduino Uno, and I don't want to get a Mega. &lt;/p&gt;&#xA;" OwnerUserId="24" LastEditorUserId="220" LastEditDate="2014-02-25T06:32:41.647" LastActivityDate="2015-08-22T02:47:24.880" Title="Is there a way to have more than 14 Output pins on arduino?" Tags="&lt;pins&gt;&lt;arduino-uno&gt;" AnswerCount="12" CommentCount="7" FavoriteCount="15" />
  <row Id="118" PostTypeId="2" ParentId="117" CreationDate="2014-02-12T16:42:31.307" Score="19" Body="&lt;p&gt;There are two ways you can get more pins out of an arduino.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The first way is by using the Analog pins as digital output pins, which is really easy to do. All you need to do is refer to A0-A5 as pins 14,15,16,17,18,19. For example to write high to pin A0 just use digitalWrite(14, HIGH).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other way to get more pins out of the Arduino is by using a Shift Register. To do this I recommend using the &lt;a href=&quot;https://nootropicdesign.com/ez-expander/&quot;&gt;EZ-Expander Shield&lt;/a&gt;, which allows you to use digitalWrite([20-35], HIGH) when you import the EZ-Expander Library. This shield however only allows the pins to be used as outputs only and uses pins 8,12 and 13 to control the shift registers. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The great thing is, is that you can use both of the two methods above together, without any problems.&lt;/p&gt;&#xA;" OwnerUserId="24" LastActivityDate="2014-02-12T16:42:31.307" CommentCount="3" />
  <row Id="119" PostTypeId="2" ParentId="117" CreationDate="2014-02-12T16:54:59.757" Score="33" Body="&lt;p&gt;A common way to expand the set of available output pins on the Arduino is to use shift registers like the 74HC595 IC (&lt;a href=&quot;http://www.nxp.com/documents/data_sheet/74HC_HCT595.pdf&quot;&gt;link to datasheet&lt;/a&gt;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You need 3 pins to control these chips: &lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Clock&lt;/li&gt;&#xA;&lt;li&gt;Latch&lt;/li&gt;&#xA;&lt;li&gt;Data&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;In a program, you pass on the data one bit at a time to the shift register using the &lt;a href=&quot;http://arduino.cc/en/tutorial/ShiftOut&quot;&gt;shiftOut() command&lt;/a&gt;, like so:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;shiftOut(dataPin, clockPin, data); &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;With that command, you set each of the 8 outputs on the 595 IC with the 8 bits in the &lt;code&gt;data&lt;/code&gt; variable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With one 595, you gain 5 pins (8 on the IC, but you spend 3 to talk to it). To get more outputs, you can daisy-chain a series of 595 together, by connecting its serial-out pin, to the data pin of the next one. You also must connect together the clock and latch pins of all of the 595 ICs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The resulting circuit (using one 595) would look like this:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/mUyUl.jpg&quot; alt=&quot;Circuit using 595 shift register&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The figure above was taken from this &lt;a href=&quot;http://codeproject.com&quot;&gt;codeproject.com&lt;/a&gt; webpage:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/144606/Arduino-Platform-Working-with-Shift-Registers&quot;&gt;http://www.codeproject.com/Articles/144606/Arduino-Platform-Working-with-Shift-Registers&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The latch pin is used to keep the 595 outputs steady while you are shifting out data into it, like so:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;digitalWrite(latchPin, LOW);&#xA;shiftOut(dataPin, clockPin, data); &#xA;digitalWrite(latchPin, HIGH);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="46" LastEditorUserId="46" LastEditDate="2014-02-12T17:03:00.620" LastActivityDate="2014-02-12T17:03:00.620" CommentCount="4" />
  <row Id="120" PostTypeId="2" ParentId="113" CreationDate="2014-02-12T17:01:24.530" Score="6" Body="&lt;p&gt;Write a sketch that millis 1000 times, not by making a loop, but by copy and paste. Measure that and compare it to the actual expected time. Mind you that that the results may vary with different versions of the IDE (and its compiler in particular).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option is to toggle an IO pin before and after the millis call, then measure the time for a very small value and a somewhat larger value. Compare the measured timings and calculate the overhead.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The most accurate way is to take a look at the disassembly listing, the generated code. But that is not for the faint of heart. You'll have to carefully study the datasheet how long each instruction cycle takes.&lt;/p&gt;&#xA;" OwnerUserId="83" LastEditorUserId="83" LastEditDate="2014-02-13T06:11:15.470" LastActivityDate="2014-02-13T06:11:15.470" CommentCount="5" />
  <row Id="121" PostTypeId="2" ParentId="74" CreationDate="2014-02-12T17:26:22.720" Score="3" Body="&lt;p&gt;No, You shouldn't need any type of cooling device such as a fan as long as the case has a few holes in order to allow the heat to rise out of the case. I do not recommend using cases that are completely sealed, unless you are using it in an environment that has things that could hard the Arduino such as  ROVs or Nuclear waste facility (although I don't know why you would be at one in the first place).&lt;/p&gt;&#xA;" OwnerUserId="24" LastActivityDate="2014-02-12T17:26:22.720" CommentCount="3" />
  <row Id="122" PostTypeId="1" AcceptedAnswerId="128" CreationDate="2014-02-12T17:28:00.757" Score="10" ViewCount="809" Body="&lt;p&gt;I want to use the &lt;a href=&quot;http://learn.adafruit.com/adafruit-cc3000-wifi&quot;&gt;Adafruit CC3000&lt;/a&gt; and its &lt;a href=&quot;https://github.com/adafruit/Adafruit_CC3000_Library&quot;&gt;Arduino libraries&lt;/a&gt; on another platform. In this case it's the Arduino pin compatible &lt;a href=&quot;http://www.cypress.com/?rID=77780&quot;&gt;PSOC4 Pioneer Kit&lt;/a&gt;. This is an ARM Cortex M0 based platform.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is: How would I go about porting a library like this? What are the steps, key files etc?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One obvious issue is that PSOC Creator does not readily support C++.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One positive might be that the Arduino Due board is based on the Atmel SAM3X8E ARM Cortex-M3 CPU.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;NOTE: If you think this question is off topic; please head over to &lt;a href=&quot;http://meta.arduino.stackexchange.com/questions/22/is-it-ok-to-ask-questions-about-arduino-compatible-micros-not-clones&quot;&gt;this question&lt;/a&gt; on Arduino Meta to voice your opinion on whether questions on Arduino Compatible devices are appropriate for this list.&lt;/p&gt;&#xA;" OwnerUserId="113" LastActivityDate="2014-02-12T20:32:53.883" Title="What are the steps involved in porting an Arduino library?" Tags="&lt;library&gt;" AnswerCount="1" CommentCount="3" />
  <row Id="123" PostTypeId="1" CreationDate="2014-02-12T17:30:59.020" Score="9" ViewCount="988" Body="&lt;p&gt;What hardware and software solutions work and what are the tradeoffs for connecting an Arduino Due to the internet?  I gather the &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoBoardEthernet&quot;&gt;ethernet hardware&lt;/a&gt; is much cheaper than &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoWiFiShield&quot;&gt;WiFi hardware&lt;/a&gt; (€29 versus €69).  In either case (wired or wireless), what software stacks and drivers work under AtmelStudio?&lt;/p&gt;&#xA;" OwnerUserId="44" LastActivityDate="2014-03-03T18:48:47.357" Title="Internet connectivity for the Arduino Due using AtmelStudio?" Tags="&lt;ethernet&gt;&lt;arduino-due&gt;&lt;atmel-studio&gt;&lt;wifi&gt;&lt;tcpip&gt;" AnswerCount="1" CommentCount="4" />
<row Id="124" PostTypeId="1" CreationDate="2014-02-12T19:26:18.917" Score="10" ViewCount="838" Body="&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; How does one prepare clothing with embedded electronics for washing?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt; There are several Arduino boards/clones that are designed for &quot;wearable tech.&quot;  (For example, the &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoBoardLilyPad&quot;&gt;Lilypad&lt;/a&gt;.)  Wearable tech with LED light patterns, microphones, GPS, or other circuitry is an interesting concept, but water and electricity tend not to mix.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To prepare wearable tech for washing, I would assume people make large circuitry removable.  Yet, inevitably, some electronics will be more-or-less permanently affixed to the cloth.  What, if anything, can be done to these electronics (e.g. sewn-in Arduino Lilypad) to make them washing-machine (preferred--hand wash could be done, but it's so much easier to machine wash) safe?&lt;/p&gt;&#xA;" OwnerUserId="52" LastActivityDate="2014-02-16T18:29:21.220" Title="Washable, Wearable Tech with Arduino" Tags="&lt;safety&gt;" AnswerCount="3" CommentCount="0" FavoriteCount="2" />
  <row Id="125" PostTypeId="2" ParentId="124" CreationDate="2014-02-12T19:39:19.070" Score="5" Body="&lt;p&gt;I would use some sort of epoxy and cover up the exposed circuitry. The major concern would be where the wires connect to the board as flex over time can weaken it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Some options include:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.3m.com/product/information/Scotchcast-Wet-Niche-Potting-Kit.html&quot; rel=&quot;nofollow&quot;&gt;3M™ Scotchcast™ Wet-Niche Potting Kit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.henkelna.com/product-search-1554.htm?nodeid=8797846732801&quot; rel=&quot;nofollow&quot;&gt;Hysol&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;US1150™—For electronics, telecommunications, and automotive&#xA;  components. Provides environmental hazard protection.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;US1152™—For electronic assemblies. Provides environmental hazard protection.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;  Heat might play a factor if you cover up the boards in epoxy but you shouldn't be producing that much heat in a wearable device anyway, right?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="11" LastEditorUserId="11" LastEditDate="2014-02-12T19:45:00.310" LastActivityDate="2014-02-12T19:45:00.310" CommentCount="0" />
  <row Id="126" PostTypeId="2" ParentId="117" CreationDate="2014-02-12T19:41:02.147" Score="11" Body="&lt;p&gt;If you want to drive LEDs, then you can also use a MAX7219 that can drive 64 LEDs, without extra circuitry (no need for transistor to amplify signal).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Driving a &lt;a href=&quot;http://www.maximintegrated.com/datasheet/index.mvp/id/1339&quot;&gt;MAX7219&lt;/a&gt; requires only 3 output pins on Arduino.&#xA;Also, you can find a few &lt;a href=&quot;http://playground.arduino.cc/Main/LedControl&quot;&gt;Arduino libraries&lt;/a&gt; for it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can also chain several of them if you need to power more than 64 LEDs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have used it successfully for multiple 7-segment LED displays.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Downside: it is expensive (about $10).&lt;/p&gt;&#xA;" OwnerUserId="84" LastEditorUserId="84" LastEditDate="2014-02-12T21:03:50.000" LastActivityDate="2014-02-12T21:03:50.000" CommentCount="2" />
  <row Id="127" PostTypeId="2" ParentId="124" CreationDate="2014-02-12T19:42:37.623" Score="4" Body="&lt;p&gt;I would make it so the Board has velcro on it so that it can be un attached from the clothing, and then have all the wires have snap terminals that wires from the Arduino connect to. This way you un snap all the wires and remove the arduino. As far as components, I would cover them in an epoxy to protect them.&lt;/p&gt;&#xA;" OwnerUserId="24" LastActivityDate="2014-02-12T19:42:37.623" CommentCount="1" />
  <row Id="128" PostTypeId="2" ParentId="122" CreationDate="2014-02-12T20:32:53.883" Score="8" Body="&lt;p&gt;I did essentially the same thing with getting the Adafruit ST7735 library working in chipKIT. &lt;a href=&quot;http://forums.adafruit.com/viewtopic.php?f=47&amp;amp;t=42966&quot;&gt;I started a support thread here which can lead you through my process&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I tackled it the same way I do general programming:&lt;br&gt;&#xA;1-» Copy over Libraries, get it so your compiler can actually SEE them.&lt;br&gt;&#xA;2-» Start trying to compile and then triage errors from the &quot;top level&quot; down:&lt;br&gt;&#xA;3-» Look for stlib functions you recognize as should be working and fix those.&lt;br&gt;&#xA;4-» Look for AVR specific code and comment those out. I normally also add my initials and a comment: &lt;code&gt;ckck - bitbanging SPI&lt;/code&gt;, so I can search for these later.&lt;br&gt;&#xA;Repeat 3 and 4 until it works or you quit. :)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Reach out to the forums for your target; they might have been there done that -- or like in my case, you introduce them to something that they want, so they dive in and help.&lt;/p&gt;&#xA;" OwnerUserId="79" LastActivityDate="2014-02-12T20:32:53.883" CommentCount="0" />
  <row Id="129" PostTypeId="1" AcceptedAnswerId="130" CreationDate="2014-02-12T21:54:44.307" Score="5" ViewCount="316" Body="&lt;p&gt;I was communicating between my computer and my Arduino Uno R3 through Bluetooth using &lt;a href=&quot;http://www.mdfly.com/index.php?main_page=product_info&amp;amp;cPath=8_47&amp;amp;products_id=769&amp;amp;zenid=6f2b3946847b73b5ef2185e5e756e498&quot; rel=&quot;nofollow&quot;&gt;this Bluetooth module&lt;/a&gt;. The connector I use has a red wire where it connects to GND, and a black wire where it connects to +5V.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/upJ7C.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;                ↓        ↓  to Uno ↓       ↓&#xA;               +5V      GND       pin 0  pin 1&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I forgot this one time when I connected the Bluetooth module to the Uno, so the polarity was reversed. This fried the Bluetooth module.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After getting a new module, I discovered that the Uno was apparently fried too. Plugging a USB cable into the Uno made the little green integrated LED turn on, but that was all that happened; none of the pins put out any electricity. When I tried to upload a program, it gave the infamous &lt;code&gt;avrdude: stk500_getsync(): not in sync: resp=0x00&lt;/code&gt; error. I could upload programs to my other Uno fine, and I could not upload to the broken Uno on my other computer.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Two of the Arduino experts I know told me that the ATmega328 chip might be the only broken part. Is this likely to be the case? I have an Uno R2 with a working ATmega328. Would temporarily replacing the R3's ATmega with that R2's ATmega have a change of damaging anything?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="37" LastEditDate="2014-02-25T14:47:02.720" LastActivityDate="2014-02-25T14:47:02.720" Title="Is my ATmega broken, and would replacing it with another break that one, too?" Tags="&lt;arduino-uno&gt;&lt;atmega328&gt;" AnswerCount="1" CommentCount="5" />
  <row Id="130" PostTypeId="2" ParentId="129" CreationDate="2014-02-12T22:08:04.703" Score="7" Body="&lt;p&gt;Besides breaking a pin while removing the IC from its socket, or static electricity during manipulation, I don't see what could fry the ATmega. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it is possible that the R2 ATmega has a different bootloader and that may be an issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If I was you I would just remove the ATmega from the R3 board and test it on a breadboard (don't need a lot of components to do that); at least that could tell you if it is fried or if it is the R3 board that is fried...&lt;/p&gt;&#xA;" OwnerUserId="84" LastActivityDate="2014-02-12T22:08:04.703" CommentCount="2" />
  <row Id="131" PostTypeId="2" ParentId="104" CreationDate="2014-02-12T22:40:52.577" Score="5" Body="&lt;p&gt;I figured out a way to do this without having to port the compiler to iOS. It only works with the arduino Yún, but the Yún can send code to other arduinos with an spi cable.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install an SSH app on your device so you can communicate with the arduino&lt;/li&gt;&#xA;&lt;li&gt;Using that, install &lt;a href=&quot;http://inotool.org&quot;&gt;Ino&lt;/a&gt; on your Yún, a command line arduino compiler&lt;/li&gt;&#xA;&lt;li&gt;Create a file, put your code in it, then save it&lt;/li&gt;&#xA;&lt;li&gt;use &lt;a href=&quot;http://inotool.org&quot;&gt;Ino&lt;/a&gt; to upload your code!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;kind of confusing, but it could work!&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-12T22:40:52.577" CommentCount="0" />
  <row Id="132" PostTypeId="1" AcceptedAnswerId="133" CreationDate="2014-02-13T00:17:38.463" Score="11" ViewCount="11638" Body="&lt;p&gt;There are some pins on the Arduino which I haven't been able to find out anything about:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;IOREF&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AREF&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;An unlabeled one next to &lt;code&gt;IOREF&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;What are they?&lt;/p&gt;&#xA;" OwnerUserId="144" LastEditorUserId="220" LastEditDate="2014-02-25T06:32:37.477" LastActivityDate="2016-04-16T23:38:43.477" Title="What are the AREF, IOREF, and the unlabeled pin next to IOREF on the Uno R3?" Tags="&lt;pins&gt;&lt;arduino-uno&gt;" AnswerCount="2" CommentCount="0" />
  <row Id="133" PostTypeId="2" ParentId="132" CreationDate="2014-02-13T00:21:17.303" Score="13" Body="&lt;p&gt;&lt;strong&gt;AREF:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is the voltage reference analog-to-digital converter (ADC). It can be used instead of the standard 5V reference for the top end of the analog spectrum – for example, if you wanted to use the ADC to monitor a signal that had a 0-1.5 volt range you could get the full scale of the ADC by connect AREF to a 1.5V signal. &lt;strong&gt;DO NOT CONNECT A SIGNAL OUTSIDE THE 0V TO 5V RANGE!&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note that in order for this to work, you must run &lt;code&gt;analogReference(EXTERNAL);&lt;/code&gt; before using &lt;code&gt;analogRead()&lt;/code&gt;. Also:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;After changing the analog reference, the first few readings from analogRead() may not be accurate.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Fore more information, see &lt;a href=&quot;http://www.arduino.cc/en/Reference/AnalogReference&quot; rel=&quot;nofollow&quot;&gt;AnalogReference&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;IOREF:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a voltage corresponding to the i/o of that board, for example an Uno would supply 5v to this pin, but a Due would supply 3.3v. Sending a signal to this pin does nothing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Unlabeled pin:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This pin is unused, but is there to ensure compatibility with future products. It is not connected to anything on any R3 boards I have seen.&lt;/p&gt;&#xA;" OwnerUserId="8" LastEditorUserId="10507" LastEditDate="2016-04-16T23:38:43.477" LastActivityDate="2016-04-16T23:38:43.477" CommentCount="0" />
  <row Id="134" PostTypeId="2" ParentId="117" CreationDate="2014-02-13T00:28:13.180" Score="6" Body="&lt;p&gt;As you wrote already already, you can use all pins, including TX and RX as digital output. I did that a while ago for a demonstrator and recorded a video - &lt;a href=&quot;http://www.youtube.com/watch?v=ibhoqUkiSys&quot;&gt;20 LEDS on 20 pins&lt;/a&gt; - of this rather nonsensical project. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;As described by &lt;em&gt;Peter R. Bloomfield&lt;/em&gt; &lt;a href=&quot;http://arduino.stackexchange.com/questions/85/why-cant-i-upload-a-sketch-while-other-components-devices-are-connected-to-my-u&quot;&gt;here&lt;/a&gt;, you a have to disconnect TX and RX for upload. Moreover, you're out of pins to read sensors for possible interactivity and have to make sure that the total current limit isn't reached. Not to forget that you're limited to 5V leds if you drive them directly with your Arduino.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The use of shift registers in general and the 595, described by &lt;em&gt;Ricardo&lt;/em&gt; is therefore highly recommended. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;They are cheap!&lt;/li&gt;&#xA;&lt;li&gt;It's rather easy to cascade them.&lt;/li&gt;&#xA;&lt;li&gt;A lot of speed can be gained when you use hardware-SPI.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;I used them a while ago when I realized the soldering and programming part of &lt;a href=&quot;http://www.heise.de/hardware-hacks/projekte/Kawaii-me-2073147.html&quot;&gt;Kawaii me&lt;/a&gt; (text of the link is in German) of the upcycling artist &lt;em&gt;Dominik Jais&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here, just a bunch of &lt;strong&gt;595&lt;/strong&gt; were used to drive a display of 8x11 leds. Since the leds were cut from a stripe of 12V SMD leds, an additional power supply and some &lt;strong&gt;UDN2803A&lt;/strong&gt; Darlington arrays, hooked to the output pins of the shift registers, were necessary.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Other general methods would include the use of PCF8574(A) 8bit port expanders, which are controlled via the I2C bus.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anyway, I'd give the 595 shift registers a try first.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you need to control a couple of RGB leds, however, you might want to look for more specialized solutions. Some RGB leds come with their own &lt;strong&gt;WS2812&lt;/strong&gt;. These fine pieces can be cascaded (1-Wire bus) and are addressed via their position in the chain.&lt;/p&gt;&#xA;" OwnerUserId="89" LastEditorUserId="89" LastEditDate="2014-02-13T00:42:02.540" LastActivityDate="2014-02-13T00:42:02.540" CommentCount="0" />
  <row Id="135" PostTypeId="2" ParentId="132" CreationDate="2014-02-13T00:33:14.047" Score="6" Body="&lt;p&gt;Concerning the &lt;code&gt;AREF&lt;/code&gt; pin, you have to remember that the Arduino comes with a 10bit ADC (Analog-Digital-Converter), which converts incoming voltages between 0V and 5V to integer values between 0 and 1023. This results in a resolution of roughly 4.8 mV.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If a sensor only delivers a lower maximum voltage, it is resonable to apply this voltage to the &lt;code&gt;AREF&lt;/code&gt; pin, just in order to obtain a higher resolution.&lt;/p&gt;&#xA;" OwnerUserId="89" LastActivityDate="2014-02-13T00:33:14.047" CommentCount="1" />
  <row Id="136" PostTypeId="1" AcceptedAnswerId="137" CreationDate="2014-02-13T02:04:23.007" Score="12" ViewCount="4310" Body="&lt;p&gt;There are three different revisions of the Arduino Uno. What changed in each revision?&lt;/p&gt;&#xA;" OwnerUserId="33" LastEditorUserId="33" LastEditDate="2015-01-01T22:58:32.373" LastActivityDate="2015-01-01T22:58:32.373" Title="What is the difference between the revisions of the Arduino Uno board?" Tags="&lt;arduino-uno&gt;&lt;revisions&gt;" AnswerCount="2" CommentCount="0" FavoriteCount="3" />
  <row Id="137" PostTypeId="2" ParentId="136" CreationDate="2014-02-13T02:10:54.823" Score="9" Body="&lt;p&gt;Here is a summary from &lt;a href=&quot;http://arduino.cc/en/Main/ArduinoBoardUno&quot;&gt;the official site&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Revision 2 of the Uno board has a resistor pulling the 8U2 HWB line to&#xA;  ground, making it easier to put into DFU mode.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;Revision 3 of the board has the following new features:&lt;/p&gt;&#xA;  &#xA;  &lt;ul&gt;&#xA;  &lt;li&gt;1.0 pinout: added SDA and SCL pins that are near to the AREF pin and two other new pins placed near to the RESET pin, the IOREF that&#xA;  allow the shields to adapt to the voltage provided from the board. In&#xA;  future, shields will be compatible with both the board that uses the&#xA;  AVR, which operates with 5V and with the Arduino Due that operates&#xA;  with 3.3V. The second one is a not connected pin, that is reserved for&#xA;  future purposes.&lt;/li&gt;&#xA;  &lt;li&gt;Stronger RESET circuit.&lt;/li&gt;&#xA;  &lt;li&gt;Atmega 16U2 replace the 8U2.&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;A more detailed list of changes can be found &lt;a href=&quot;http://startingelectronics.com/articles/arduino/uno-r3-r2-differences/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;R2:&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;The rotation of the ATMEGA8U2 (the little chip near the USB port) was changed by 45 degrees. &lt;img src=&quot;http://i.stack.imgur.com/piYR2.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Four solder pads (JP2) were added, connecting to pins PB4 to PB7 of the USB ATMEGA.&quot; &lt;img src=&quot;http://i.stack.imgur.com/mudBq.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Instead of R1's solder pads, R2 adds header pins to the USB ATMEGA ICSP. &lt;img src=&quot;http://i.stack.imgur.com/zj258.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;An LED connected to pin 13 was added. It turns on when pin 13 is &lt;code&gt;HIGH&lt;/code&gt;, off when &lt;code&gt;LOW&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;The main microchip was changed from an ATmega168 to an ATmega328.&lt;/li&gt;&#xA;&lt;li&gt;A resistor was added between the DTR (HWB) line and the ATMEGA PD7 pin.&#xA;&lt;img src=&quot;http://i.stack.imgur.com/lzBuR.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2&gt;R3:&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The rotation of the ATMEGA8U2 was changed back by 45 degrees.&lt;/li&gt;&#xA;&lt;li&gt;The ATMEGA8U2 was changed to an ATMEGA16U2.&lt;/li&gt;&#xA;&lt;li&gt;A diode was added, wired from +5vdc to the reset pin, cathode to +5vdc.&#xA;&lt;img src=&quot;http://i.stack.imgur.com/XneB4.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/li&gt;&#xA;&lt;li&gt;The 8 pin connector that contains Arduino pins 8 was changed to 13, GND and AREF for a 10 pin connector. The extra 2 pins are connected to AD4/SDA and AD5/SCL. Also, the 6 pin connector that has the reset pin connected to it changed to an 8 pin connector. One of the new pins on this header is the IOREF pin that allows shields connected to the board to adapt to the voltage of the board. The second pin is not connected and reserved for future use.&#xA;&lt;img src=&quot;http://i.stack.imgur.com/ay2Zt.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="37" LastEditorUserId="37" LastEditDate="2014-02-13T02:44:21.900" LastActivityDate="2014-02-13T02:44:21.900" CommentCount="0" />
  <row Id="138" PostTypeId="2" ParentId="136" CreationDate="2014-02-13T02:21:28.900" Score="5" Body="&lt;h3&gt;User Side Changes&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Both revision 2 and 3 boards add four solder pads (JP2) connecting to pins PB4 to PB7 of the USB ATMEGA.&lt;/li&gt;&#xA;&lt;li&gt;Revision 2 and 3 boards are both supplied with header pins in the USB ATMEGA ICSP header rather than just solder pads in the Arduino Uno.&lt;/li&gt;&#xA;&lt;li&gt;The revision 3 board changes the 8 pin connector that contains Arduino pins 8 to 13, GND and AREF for a 10 pin connector. The extra 2 pins are connected to AD4/SDA and AD5/SCL. These are the two analog input pins that can be used for I2C. &lt;/li&gt;&#xA;&lt;li&gt;Revision 3 boards change the 6 pin connector that has the reset pin connected to it to an 8 pin connector. One of the new pins on this header is the IOREF pin that allows shields connected to the board to adapt to the voltage of the board. The second pin is reserved for future use.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Electronics Based Changes&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The Arduino Uno and Arduino Uno revision 2 both have an ATMEGA8U2 USB microcontroller on board – this is upgraded to an ATMEGA16U2 on the revision 3 board.&lt;/li&gt;&#xA;&lt;li&gt;Revision 3 adds a diode across the USB ATMEGA reset pin pull-up resistor.&lt;/li&gt;&#xA;&lt;li&gt;Both revision 2 and 3 boards add a 1k pull-down resistor to the DTR (HWB) line coming from the USB ATMEGA microcontroller – from the PD7 pin.&lt;/li&gt;&#xA;&lt;li&gt;The Arduino Uno and Arduino Uno revision 2 both have a LED and resistor connected in series on Arduino pin 13. The revision 3 board buffers this LED/resistor through a unity gain op-amp. This is the spare op-amp that was unused on previous boards.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;Sources:&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://startingelectronics.com/articles/arduino/uno-r3-r2-differences/&quot;&gt;http://startingelectronics.com/articles/arduino/uno-r3-r2-differences/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="65" LastActivityDate="2014-02-13T02:21:28.900" CommentCount="0" />
  <row Id="139" PostTypeId="2" ParentId="117" CreationDate="2014-02-13T02:24:28.673" Score="7" Body="&lt;p&gt;In addition to &lt;a href=&quot;https://arduino.stackexchange.com/users/46/ricardo&quot;&gt;Ricardo&lt;/a&gt;'s answer, what Wikipedia states on &lt;a href=&quot;http://en.wikipedia.org/wiki/Shift_register#Uses&quot;&gt;shift registers&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;One of the most common uses of a shift register is to convert between serial and parallel interfaces. [...] SIPO registers are commonly attached to the output of microprocessors when more General Purpose Input/Output pins are required than are available. This allows several binary devices to be controlled using only two or three pins, but slower than parallel I/O.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;In the &lt;a href=&quot;http://www.codeproject.com/Articles/144606/Arduino-Platform-Working-with-Shift-Registers&quot;&gt;article&lt;/a&gt; Ricardo linked you can see the diagram of the shift register.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/fnNDa.png&quot; alt=&quot;Shift register diagram&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What happens here is that you put the data of the 8 pins in a sequence and for each clock tick the shift register will shift (move the binary data from each latch to the next one) until it &quot;makes a circle&quot; i.e. the first bit arrives to the last pin. Shift registers also have an input where you can turn on/off the shifting so the status can be kept after the data is shifted to the position. For a simple demonstration see the following animation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/JgnIV.gif&quot; alt=&quot;Shift register animation&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here the red light is the serial input and the green ones are showing the state of the latches in this simplified &lt;a href=&quot;http://en.wikipedia.org/wiki/Shift_register#Serial-in.2C_parallel-out_.28SIPO.29&quot;&gt;SIPO shift register&lt;/a&gt;. After the data shifted to place shifting can be turned off and you can read the pins. In this example I shifted out &lt;code&gt;10101011&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;From these examples you can realize that serial transfer will be slower than parallel, because you have to wait for the shift register to shift the bits to their place. You will have to wait the same amount of clock tick as many bits you want to load. This is one of the many reasons why you can't chain them indefinitely, because loading would take forever.&lt;/p&gt;&#xA;" OwnerUserId="87" LastActivityDate="2014-02-13T02:24:28.673" CommentCount="2" />
  <row Id="140" PostTypeId="1" CreationDate="2014-02-13T02:49:06.950" Score="5" ViewCount="13491" Body="&lt;p&gt;I want to use sensors on an Arduino to control values in a &lt;a href=&quot;http://en.wikipedia.org/wiki/MATLAB&quot; rel=&quot;nofollow&quot;&gt;MATLAB&lt;/a&gt; program. What are my options for communicating?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I've used &lt;a href=&quot;http://en.wikipedia.org/wiki/Processing_%28programming_language%29&quot; rel=&quot;nofollow&quot;&gt;Processing&lt;/a&gt; to receive data sent via the serial cable, and that strategy has worked pretty well. Is there something similar I can do using MATLAB? I'm somewhat new to MATLAB, so gentle guidance would be great.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not really looking for something like the &lt;a href=&quot;http://www.mathworks.com/matlabcentral/fileexchange/32374-matlab-support-package-for-arduino-aka-arduinoio-package&quot; rel=&quot;nofollow&quot;&gt;ArduinoIO&lt;/a&gt; package -- I want to have separate computation executing on the Arduino and occasionally informing my MATLAB program (which will occasionally poll the serial line, I suppose).&lt;/p&gt;&#xA;" OwnerUserId="150" LastEditorUserId="510" LastEditDate="2014-04-13T16:58:53.837" LastActivityDate="2015-03-31T06:48:38.067" Title="How can I communicate from Arduino to MATLAB" Tags="&lt;serial&gt;&lt;matlab&gt;" AnswerCount="4" CommentCount="3" FavoriteCount="2" />
  <row Id="141" PostTypeId="1" AcceptedAnswerId="152" CreationDate="2014-02-13T02:53:07.690" Score="12" ViewCount="1665" Body="&lt;p&gt;Can I program my Arduino using any other programming languages than C++? If so, which programming languages. What software would I need to compile and load code to the Arduino.&lt;/p&gt;&#xA;" OwnerUserId="33" LastActivityDate="2014-02-18T22:21:17.023" Title="Programming options other than C++" Tags="&lt;programming&gt;" AnswerCount="4" CommentCount="5" />
  <row Id="142" PostTypeId="1" AcceptedAnswerId="163" CreationDate="2014-02-13T02:56:18.943" Score="8" ViewCount="13604" Body="&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; Where do I put code if I want it to execute only once per Arduino startup?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt; I tend to use my Arduino to perform tasks that should be executed once per power cycle.  (For example, my robot should only drive forward &lt;em&gt;once&lt;/em&gt; every time I turn it on--more than that, and it might fall off the table.)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The standard Arduino IDE &quot;template&quot; consists of a &lt;code&gt;loop()&lt;/code&gt; and a &lt;code&gt;setup()&lt;/code&gt; function.  The &lt;code&gt;setup&lt;/code&gt; code is run once per power cycle, and the &lt;code&gt;loop&lt;/code&gt; is re-started every time it finishes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I see two approaches to code &quot;1 time tasks:&quot;&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Method 1: &quot;Loop once&quot;&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;  //do setup stuff&#xA;}&#xA;&#xA;void loop() {&#xA;  //do task&#xA;&#xA;  while(1) ; //Repeat forever, preventing function from re-starting&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;Method 2: &quot;Setup only&quot;&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;  //do setup stuff&#xA;&#xA;  //do task&#xA;}&#xA;&#xA;void loop() {&#xA;  //do nothing&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;More detailed form of question:&lt;/strong&gt;  Is one of these methods &quot;better&quot; from a hardware/software sense?  (e.g. is there anything &quot;special&quot; about the &lt;code&gt;setup&lt;/code&gt; function, like it can only run for so much time?)&lt;br&gt;&#xA;And, if they are the same from a hardware/software perspective, is there a &quot;best practice&quot; or standard way of writing code for these situations in the Arduino community?&lt;/p&gt;&#xA;" OwnerUserId="52" LastActivityDate="2015-04-20T14:39:25.463" Title="Code for one-time execution in Arduino" Tags="&lt;programming&gt;" AnswerCount="6" CommentCount="1" FavoriteCount="1" />
<row Id="143" PostTypeId="1" AcceptedAnswerId="149" CreationDate="2014-02-13T03:14:23.623" Score="8" ViewCount="394" Body="&lt;p&gt;Before you start to mess with a computer there are basic guidelines to be aware of, such as turn the power off and watch out for static electricity. What guidelines should I be aware of when I work with an Arduino board if I don't want to harm neither myself nor the board. The three kind of activity that requires touching the Arduino and what I'm asking about:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Setting up wire, component layout or breadboard.&lt;/li&gt;&#xA;&lt;li&gt;Debugging a running setup.&lt;/li&gt;&#xA;&lt;li&gt;Moving, mounting up the board somewhere.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="87" LastEditorUserId="87" LastEditDate="2014-02-27T21:40:10.170" LastActivityDate="2014-02-27T21:40:10.170" Title="What I should be aware before I touch my Arduino?" Tags="&lt;safety&gt;" AnswerCount="2" CommentCount="5" FavoriteCount="2" />
  <row Id="144" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T03:41:07.750" Score="5" Body="&lt;p&gt;I would strongly prefer Method 2. If you ever plan to add code to handle input, output, etc,  it's easy with Method 2 -- just fill in &lt;code&gt;loop()&lt;/code&gt;, but requires reworking/refactoring in Method 1. &lt;/p&gt;&#xA;" OwnerUserId="13" LastActivityDate="2014-02-13T03:41:07.750" CommentCount="0" />
  <row Id="145" PostTypeId="2" ParentId="141" CreationDate="2014-02-13T03:56:04.810" Score="6" Body="&lt;p&gt;In theory, any compiler which outputs AVR assembly could be used (modulo limitations on code size, ram usage etc). &lt;/p&gt;&#xA;&#xA;&lt;p&gt;AVR backends exist for both &lt;a href=&quot;http://sourceforge.net/projects/avr-llvm/&quot;&gt;LLVM&lt;/a&gt; and  &lt;a href=&quot;http://gcc.gnu.org/wiki/avr-gcc&quot;&gt;GCC&lt;/a&gt; -- so in theory, with some effort, most languages which are supported by LLVM and GCC's front-ends could be compiled to AVR. A big question will be library support, etc. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Never the less, here's a couple of odd choices for the spirit of the question, rather than its letter [1]. &lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://amforth.sourceforge.net/TG/recipes/Arduino-HelloWorld.html&quot;&gt;AMForth&lt;/a&gt;, a forth dialect can be flashed onto an Arduino. &lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/avr-ada/&quot;&gt;AVR-Ada&lt;/a&gt;: &lt;a href=&quot;http://en.wikipedia.org/wiki/Ada_%28programming_language%29&quot;&gt;Ada&lt;/a&gt; for AVR micro-controllers. &lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.mikroe.com/mikrobasic/avr/&quot;&gt;BASIC&lt;/a&gt;: Bring back the Goto!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Oh, and you could write raw &lt;a href=&quot;http://www.atmel.ca/Images/doc0856.pdf&quot;&gt;AVR Assembly&lt;/a&gt;! &lt;/p&gt;&#xA;&#xA;&lt;p&gt;[1]- I Haven't tried these though! &lt;/p&gt;&#xA;" OwnerUserId="13" LastActivityDate="2014-02-13T03:56:04.810" CommentCount="0" />
  <row Id="146" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T04:01:09.127" Score="3" Body="&lt;p&gt;There is no time limit on the setup function. I prefer method 2 because the loop can be filled with whatever you need to later.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-13T04:01:09.127" CommentCount="0" />
  <row Id="147" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T04:23:36.643" Score="1" Body="&lt;p&gt;Definitely go with method two. That's what the setup function is there for. It's much easier to read as well. Anything in the &lt;code&gt;loop()&lt;/code&gt; implies it will be run in a loop.&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-13T04:23:36.643" CommentCount="0" />
  <row Id="148" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T04:40:07.563" Score="6" Body="&lt;p&gt;I usually go with Method 2, but end up doing this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;  //do setup stuff&#xA;&#xA;  //do task&#xA;  init(); //Do start-up initialization steps&#xA;}&#xA;&#xA;void init() {&#xA;  // do tasks on startup&#xA;}&#xA;&#xA;void loop() {&#xA;  //do looping code&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;With the above setup it allows my code to be even more organized.&lt;/p&gt;&#xA;" OwnerUserId="62" LastActivityDate="2014-02-13T04:40:07.563" CommentCount="1" />
  <row Id="149" PostTypeId="2" ParentId="143" CreationDate="2014-02-13T05:11:43.680" Score="12" Body="&lt;p&gt;Turning the power off and taking proper static precautions also applies to Arduinos.  Anorton's tip about not resting it on a conductive surface is also useful.  Some other things to keep in mind:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Double check the polarities of any connections you make.&lt;/li&gt;&#xA;&lt;li&gt;Keep a consistent wiring color code.  Use red for power and black for ground.&lt;/li&gt;&#xA;&lt;li&gt;Calculate the expected current through all components before you apply power.  Check the datasheet to make sure it's within safe limits.&lt;/li&gt;&#xA;&lt;li&gt;Calculate the heat dissipation for higher power components like power supplies and motor drivers.&lt;/li&gt;&#xA;&lt;li&gt;Connect and test one small part at a time, instead of in one big bang.&lt;/li&gt;&#xA;&lt;li&gt;Make sure the parts you buy expect the same voltage, or perform the appropriate conversion.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;For keeping people safe:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Know where the fire extinguisher is.&lt;/li&gt;&#xA;&lt;li&gt;Don't put cords where people can trip on them.&lt;/li&gt;&#xA;&lt;li&gt;Use a proper stand to hold your soldering iron, and keep pets and small children away.&lt;/li&gt;&#xA;&lt;li&gt;If your project has a propeller or something physically dangerous, build failsafes and kill switches into the system.&lt;/li&gt;&#xA;&lt;li&gt;Be careful to charge any batteries properly, and not let them overheat.&lt;/li&gt;&#xA;&lt;li&gt;Be careful what you touch while troubleshooting.  Arduinos usually don't deal with very high voltages, but inductors and capacitors can build up higher charges than you expect, and hold it after power is removed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="40" LastActivityDate="2014-02-13T05:11:43.680" CommentCount="2" />
  <row Id="150" PostTypeId="2" ParentId="104" CreationDate="2014-02-13T05:21:46.223" Score="1" Body="&lt;p&gt;You can always upload to the Arduino via Bluetooth.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You must have a bluetooth chip/shield (any should do) and a PC that has bluetooth (or a table that can compile, most likely an Android tablet)&lt;/li&gt;&#xA;&lt;li&gt;You must change the BT baud rate to the same as normal arduino upload, which is 19200 (default BT baud is 9600).&lt;/li&gt;&#xA;&lt;li&gt;Connect the BT to Pin 0 and 1 so act the same as having a USB cord connected&lt;/li&gt;&#xA;&lt;li&gt;Connect a wire to the reset pin to allow remote resetting the arduino to statup the bootloader&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There must be a delay before&#xA;hitting the reset pin as the bootloader must be active when hitting&#xA;the upload button.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;li&gt;Enjoy&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;For a more detailed description please read: &lt;a href=&quot;http://ame2.asu.edu/staff/kidane/ArdWilessBtProg.pdf&quot; rel=&quot;nofollow&quot;&gt;http://ame2.asu.edu/staff/kidane/ArdWilessBtProg.pdf&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="62" LastActivityDate="2014-02-13T05:21:46.223" CommentCount="0" />
  <row Id="151" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T06:24:45.360" Score="0" Body="&lt;p&gt;As most other answers, I would go for method 2.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But I would try to avoid the call, by Arduino library, to an an empty &lt;code&gt;loop()&lt;/code&gt; that makes the Atmel consume &quot;a lot&quot; of current for nothing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Edit:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As some comments pointed out though, using &lt;code&gt;delay()&lt;/code&gt; in &lt;code&gt;loop()&lt;/code&gt; will change nothing to power consumption.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hence, if you would like to reduce power consumption once your &lt;code&gt;setup()&lt;/code&gt; has run, you will have to play with Atmel sleep modes.&#xA;You can take a look at &lt;a href=&quot;http://playground.arduino.cc/Learning/arduinoSleepCode&quot; rel=&quot;nofollow&quot;&gt;this article&lt;/a&gt; that shows how to deal with sleep modes from your Arduino sketches; it does more than just putting the Atmel to sleep but it is a good (and simple) read if you want to play with sleep modes.&lt;/p&gt;&#xA;" OwnerUserId="84" LastEditorUserId="84" LastEditDate="2014-02-13T18:29:09.117" LastActivityDate="2014-02-13T18:29:09.117" CommentCount="0" />
  <row Id="152" PostTypeId="2" ParentId="141" CreationDate="2014-02-13T06:58:14.893" Score="4" Body="&lt;p&gt;Some commonly known ones:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://sourceforge.net/apps/mediawiki/avr-ada/index.php?title=AVR-Ada&quot; rel=&quot;nofollow&quot;&gt;Ada&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.mcselec.com/&quot; rel=&quot;nofollow&quot;&gt;Basic&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://claymore.engineer.gvsu.edu/~steriana/Python/pfavr/rationale.html&quot; rel=&quot;nofollow&quot;&gt;Forth&lt;/a&gt;, &lt;a href=&quot;http://www.forth.com/embedded/index.html&quot; rel=&quot;nofollow&quot;&gt;alt&lt;/a&gt;, &lt;a href=&quot;http://www.forth.com/embedded/index.html&quot; rel=&quot;nofollow&quot;&gt;alt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.harbaum.org/till/nanovm/index.shtml&quot; rel=&quot;nofollow&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.e-lab.de/AVRco/index_en.html&quot; rel=&quot;nofollow&quot;&gt;Pascal&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://wiki.python.org/moin/PyMite&quot; rel=&quot;nofollow&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.ladyada.net/learn/avr/setup-mac.html&quot; rel=&quot;nofollow&quot;&gt;C&lt;/a&gt; (mac) and &lt;a href=&quot;http://winavr.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;C&lt;/a&gt; (Windows)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;In theory you should be able to extend avr-gcc to support other languages, though this is no small undertaking. I should also caveat that support for languages other than C typically comes with some fairly weighty restrictions on language components -- for instance, even with C++ it's discouraged to be instantiating new objects as &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; are extremely expensive in both memory space and cycles.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Besides using Google, the following references are applicable &lt;a href=&quot;http://www.piclist.com/techref/atmel/avr/languages.htm&quot; rel=&quot;nofollow&quot;&gt;Click Here.&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="77" LastActivityDate="2014-02-13T06:58:14.893" CommentCount="0" />
<row Id="153" PostTypeId="1" CreationDate="2014-02-13T07:05:23.627" Score="11" ViewCount="40323" Body="&lt;p&gt;When you have a board in your hand but you don't know is it working or not, how to verify if it's working or dead?&lt;/p&gt;&#xA;" OwnerUserId="77" LastEditorUserId="4143" LastEditDate="2015-06-06T23:41:14.560" LastActivityDate="2015-11-29T17:59:58.283" Title="How to check my Arduino board is working or dead?" Tags="&lt;arduino-uno&gt;&lt;testing&gt;" AnswerCount="3" CommentCount="1" FavoriteCount="4" />
  <row Id="154" PostTypeId="2" ParentId="153" CreationDate="2014-02-13T07:05:23.627" Score="10" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; After the @Ricardo's comment on my last post, I am posting this !&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Plug the board into a USB port on your computer and check that the green LED power indicator on the board illuminates. Standard Arduino boards (Uno, Duemilanove, and Mega) have a green LED power indicator located near the reset switch.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An orange LED near the center of the board (labeled “Pin 13 LED” in the image below) should flash on and off when the board is powered up (boards come from the factory preloaded with software to flash the LED as a simple check that the board is working).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/gDEH4.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the power LED does not illuminate when the board is connected to your computer, the board is probably not receiving power.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The flashing LED (connected to digital output pin 13) is being controlled by code running on the board (new boards are preloaded with the Blink example sketch). If the pin 13 LED is flashing, the sketch is running correctly, which means the chip on the board is working. If the green power LED is on but the pin 13 LED is not flashing, it could be that the factory code is not on the chip. If you are not using a standard board, it may not have a built-in LED on pin 13, so check the documentation for details of your board.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Online guides for getting started with Arduino are available at for &lt;a href=&quot;http://arduino.cc/en/Guide/Windows&quot;&gt;Windows&lt;/a&gt;,  for &lt;a href=&quot;http://arduino.cc/en/Guide/MacOSX&quot;&gt;Mac OS X&lt;/a&gt;, and for &lt;a href=&quot;http://www.arduino.cc/Learning/Linux&quot;&gt;Linux&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="77" LastActivityDate="2014-02-13T07:05:23.627" CommentCount="5" />
 <row Id="163" PostTypeId="2" ParentId="142" CreationDate="2014-02-13T12:43:07.087" Score="10" Body="&lt;p&gt;I'm kind of confused by your question. You ask where you want to put once-per-startup setup functions, and then discuss the setup function. &lt;em&gt;That's what the setup function is for.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As such, one-time setup functionality goes in the setup function.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;FWIW, if you look in the file that &lt;em&gt;calls&lt;/em&gt; the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;loop&lt;/code&gt; functions:  &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &amp;lt;Arduino.h&amp;gt;&#xA;&#xA;int main(void)&#xA;{&#xA;    init();&#xA;&#xA;#if defined(USBCON)&#xA;    USBDevice.attach();&#xA;#endif&#xA;&#xA;    setup();&#xA;    for (;;) {&#xA;        loop();&#xA;        if (serialEventRun) serialEventRun();&#xA;    }&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;For all intents and purposes, the two options are completely identical. Either way, you get a empty busy-wait loop. Frankly, I'd expect the two different options to probably emit the same machine code anyways, so the whole thing is a non-issue.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note:&lt;br&gt;&#xA;&lt;code&gt;if (serialEventRun) serialEventRun();&lt;/code&gt; appears to be a facility to allow you to attach a function that is called upon reception of serial data, but if you do not define a function &lt;code&gt;void serialEvent(){}&lt;/code&gt; in your code, it will compile out completely and not be present in the produced machine code.&lt;/p&gt;&#xA;" OwnerUserId="86" LastEditorUserId="86" LastEditDate="2014-02-13T12:48:32.503" LastActivityDate="2014-02-13T12:48:32.503" CommentCount="2" />
  <row Id="164" PostTypeId="2" ParentId="96" CreationDate="2014-02-13T14:01:38.190" Score="4" Body="&lt;p&gt;When a circuit is hot, it's very likely that it is drawing too much current. It may be a component that's getting more current than it's designed for, or a PCB track, or a wire.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, before you do anything else, I strongly suggest that you get a DMM and measure the current drawn by the board when powering the led strip. Google for ways to measure current with a DMM, as it can be tricky if you never done it before. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then, compare the value to those specified by the voltage regulator datasheet. The current should be within those values shown in the &quot;Electrical Characteristics&quot;, and well below those from &quot;Absolute Maximum Ratings&quot;. &lt;/p&gt;&#xA;" OwnerUserId="46" LastEditorUserId="46" LastEditDate="2014-02-13T14:06:47.320" LastActivityDate="2014-02-13T14:06:47.320" CommentCount="1" />
 <row Id="166" PostTypeId="2" ParentId="104" CreationDate="2014-02-13T14:13:04.587" Score="0" Body="&lt;p&gt;Since your question is only about uploading, this will work with a Yun&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;compile your sketches with the IDE on your pc&lt;/li&gt;&#xA;&lt;li&gt;for each hex file, copy it to the yun and run &lt;code&gt;merge-sketch-with-bootloader.lua PATH_TO_HEX_FILE&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;manage to connect to the Yun from your tablet via SSH&lt;/li&gt;&#xA;&lt;li&gt;once logged in, run &lt;code&gt;run-avrdude PATH_TO_HEX_FILE&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="27" LastActivityDate="2014-02-13T14:13:04.587" CommentCount="0" />
  <row Id="167" PostTypeId="2" ParentId="105" CreationDate="2014-02-13T14:48:24.573" Score="4" Body="&lt;p&gt;There is a project which brings a &lt;a href=&quot;https://code.google.com/p/python-on-a-chip/&quot; rel=&quot;nofollow&quot;&gt;Python virtual machine&lt;/a&gt; to micro-controllers, including the &lt;a href=&quot;https://code.google.com/p/python-on-a-chip/source/browse/#hg%2Fsrc%2Fplatform%2Farduino_mega&quot; rel=&quot;nofollow&quot;&gt;Arduino Mega&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's a quote from the Ardunio Mega &lt;a href=&quot;https://code.google.com/p/python-on-a-chip/source/browse/src/platform/arduino_mega/README&quot; rel=&quot;nofollow&quot;&gt;README&lt;/a&gt;, which gives a feel for what this could be like (though, I've not tested this!): &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The following is an example session using ipm::&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ipm&amp;gt; import avr, sys&#xA;ipm&amp;gt; avr.ddrA(0xff)&#xA;ipm&amp;gt; avr.portA(0)       # Pins 22-29 all at 0 V&#xA;ipm&amp;gt; avr.portA(0xa5)&#xA;ipm&amp;gt; sys.heap()&#xA;(2622, 7424)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="13" LastActivityDate="2014-02-13T14:48:24.573" CommentCount="0" />
<row Id="168" PostTypeId="1" AcceptedAnswerId="170" CreationDate="2014-02-13T15:03:20.657" Score="14" ViewCount="5477" Body="&lt;p&gt;I wanted to move some of my code out into a second tab in the Arduino IDE, to keep things better organised. At first, I only tried moving a function, and it seemed to work fine. I could call the function from the &lt;code&gt;setup()&lt;/code&gt; function in my main tab, and there were no problems compiling or uploading.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, I tried putting a whole class into the second tab, and suddenly it didn't work any more. For example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Tab 1:&lt;/strong&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;TestClass obj;&#xA;&#xA;void setup()&#xA;{&#xA;    obj.init();&#xA;}&#xA;&#xA;void loop()&#xA;{&#xA;    //...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Tab 2:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class TestClass&#xA;{&#xA;public:&#xA;    void init()&#xA;    {&#xA;        //...&#xA;    }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;When I tried to compile this, it gave me the following errors:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;tab1:1: error: 'TestClass' does not name a type&#xA;tab1.ino: In function 'void setup()':&#xA;tab1:5: error: 'obj' was not declared in this scope&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Why does it recognise a function in another tab, but not a class? Is there a way to make it work in the Arduino IDE, or do I need to use an alternative like Eclipse?&lt;/p&gt;&#xA;" OwnerUserId="42" LastEditorUserId="65" LastEditDate="2014-03-09T12:56:54.733" LastActivityDate="2014-03-09T12:56:54.733" Title="Why can't I declare a class in another tab in Arduino IDE?" Tags="&lt;programming&gt;&lt;arduino-ide&gt;&lt;compile&gt;" AnswerCount="2" CommentCount="3" FavoriteCount="2" />
  <row Id="169" PostTypeId="1" AcceptedAnswerId="172" CreationDate="2014-02-13T15:25:07.000" Score="6" ViewCount="256" Body="&lt;p&gt;At least for prototyping, is there a semi-permanent way to attach wires to the Nano posts?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/0n9s9.jpg&quot; alt=&quot;Arduino nano&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And yes, usually the Nano is hanging in free space by its wires (yes I know, quick and dirty, should be using something cleaner, even for prototypes).  So I'm hoping for the best of both worlds, sturdy &quot;enough&quot; to stay attached, yet possible to remove and switch around.  Having no luck finding such advice on the internet, perhaps searching for the wrong terms.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;  I neglected one important point, each wire is attached individually just like the SparkFun wires with the female header as mentioned in @TheDoctor's answer below.  &lt;/p&gt;&#xA;" OwnerUserId="118" LastEditorUserId="368" LastEditDate="2014-05-22T23:41:54.727" LastActivityDate="2016-03-11T08:58:44.787" Title="Is there a semi-permanent way to attach wires to the Nano?" Tags="&lt;arduino-nano&gt;&lt;prototype&gt;&lt;wires&gt;" AnswerCount="4" CommentCount="4" />
  <row Id="171" PostTypeId="2" ParentId="168" CreationDate="2014-02-13T16:21:34.743" Score="5" Body="&lt;p&gt;The way the Arduino IDE works is that it compiles your code (the code you write in the IDE) as the &quot;main&quot; code. Then it pulls code from all of the libraries you have imported and compiles that along with the main code. To do what you are suggesting would require you to create a library for Arduino.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Here is some more information on Arduino libraries:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://arduino.cc/en/Guide/Libraries&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Guide/Libraries&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;And here is some on how to create a library:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://arduino.cc/en/Hacking/LibraryTutorial&quot; rel=&quot;nofollow&quot;&gt;http://arduino.cc/en/Hacking/LibraryTutorial&lt;/a&gt; //this one is the easiest to understand imo&lt;br /&gt;&#xA;&lt;a href=&quot;http://playground.arduino.cc/Code/Library&quot; rel=&quot;nofollow&quot;&gt;http://playground.arduino.cc/Code/Library&lt;/a&gt; &lt;br /&gt;&#xA;&lt;a href=&quot;http://www.divilabs.com/2013/03/write-your-own-arduino-library.html#&quot; rel=&quot;nofollow&quot;&gt;http://www.divilabs.com/2013/03/write-your-own-arduino-library.html#&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is an example library I wrote &lt;a href=&quot;https://github.com/jamolnng/Arduino/tree/master/libraries/ShiftRegister&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jamolnng/Arduino/tree/master/libraries/ShiftRegister&lt;/a&gt; as you can see there is no problem with calling Arduino functions from the .cpp file (I know, I've tested the library)&lt;/p&gt;&#xA;" OwnerUserId="10" LastEditorUserId="10" LastEditDate="2014-02-13T16:37:29.477" LastActivityDate="2014-02-13T16:37:29.477" CommentCount="1" />
  <row Id="172" PostTypeId="2" ParentId="169" CreationDate="2014-02-13T16:39:08.530" Score="5" Body="&lt;p&gt;There are jumper wires that have a female header on one end and a male header on the other. Example: &lt;a href=&quot;https://www.sparkfun.com/products/9140&quot; rel=&quot;nofollow&quot;&gt;https://www.sparkfun.com/products/9140&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/lyllM.png&quot; alt=&quot;jumper wires&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could also attatch several wired to a strip of breakaway female headers, such as &lt;a href=&quot;https://www.sparkfun.com/products/115&quot; rel=&quot;nofollow&quot;&gt;https://www.sparkfun.com/products/115&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/cdMeO.png&quot; alt=&quot;headers&quot;&gt;&lt;/p&gt;&#xA;" OwnerUserId="8" LastEditorUserId="8" LastEditDate="2014-02-14T22:24:08.177" LastActivityDate="2014-02-14T22:24:08.177" CommentCount="1" />
  <row Id="173" PostTypeId="2" ParentId="143" CreationDate="2014-02-13T17:05:49.667" Score="3" Body="&lt;p&gt;One of the most common bad things I have seen is connecting LEDs directly to addition pins without a current limiting resistor.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically, in electronics there are a few main sources of problems. Too much current, too much voltage, overheating, and physical damage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Too much current usually comes from shorting things, too much voltage(or reversed polarity) usually comes from not paying attention to what is being connected, overheating comes from too much current or not using a heatsink when you should be.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Basically, just think before you connect things and you'll be fine. Learn some basic circuit theory if you haven't already, get in the habit of knowing the ratings of the parts you want to use, and double check stuff before turning it on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I like this list here of things not to do: &lt;a href=&quot;http://ruggedcircuits.com/html/ancp01.html&quot; rel=&quot;nofollow&quot;&gt;http://ruggedcircuits.com/html/ancp01.html&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="168" LastActivityDate="2014-02-13T17:05:49.667" CommentCount="0" />
<row Id="176" PostTypeId="1" AcceptedAnswerId="201" CreationDate="2014-02-13T19:22:59.960" Score="22" ViewCount="66099" Body="&lt;p&gt;Say I have some variables that I want to print out to the terminal, what's the easiest way to print them in a string?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Currently I do something like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Serial.print(&quot;Var 1:&quot;);Serial.println(var1);&#xA;Serial.print(&quot; Var 2:&quot;);Serial.println(var2);&#xA;Serial.print(&quot; Var 3:&quot;);Serial.println(var3);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Is there a better way to do this?&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-09-30T01:47:15.067" Title="How do I print multiple variables in a string?" Tags="&lt;serial&gt;&lt;string&gt;&lt;terminal&gt;" AnswerCount="5" CommentCount="1" FavoriteCount="6" />
  <row Id="177" PostTypeId="2" ParentId="176" CreationDate="2014-02-13T20:41:19.023" Score="4" Body="&lt;p&gt;&#xA;This is probably not better, just different.&#xA;You can use the &lt;strong&gt;String&lt;/strong&gt; object for output. These objects allow concatenation and support automatic typecasting.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Serial.begin(9600);&#xA;String label = &quot;Var&quot;;&#xA;const byte nValues = 3;&#xA;int var[nValues] = {36, 72, 49};&#xA;&#xA;for (int i = 0; i &amp;lt; nValues; i++) {&#xA;    String stuff = label + i + &quot;: &quot;;&#xA;    Serial.println(stuff + var[i]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="89" LastActivityDate="2014-02-13T20:41:19.023" CommentCount="2" />
  <row Id="178" PostTypeId="2" ParentId="140" CreationDate="2014-02-13T20:45:47.473" Score="5" Body="&lt;p&gt;&lt;a href=&quot;http://www.mathworks.com/matlabcentral/fileexchange/32374-matlab-support-package-for-arduino-aka-arduinoio-package&quot;&gt;MATLAB Support Package for Arduino (aka ArduinoIO Package)&lt;/a&gt; allows you to do it fairly easily.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Sample usage:&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;%-- connect to the board &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a = arduino('COM9')&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;%-- specify pin mode &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.pinMode(4,'input');&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.pinMode(13,'output');&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;%-- digital i/o &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.digitalRead(4) % read pin 4&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.digitalWrite(13,0) % write 0 to pin 13&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;%-- analog i/o &lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.analogRead(5) % read analog pin 5&lt;/code&gt;&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;&lt;code&gt;a.analogWrite(9, 155) % write 155 to analog pin 9&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-13T20:45:47.473" CommentCount="2" />
  <row Id="179" PostTypeId="1" AcceptedAnswerId="180" CreationDate="2014-02-13T21:23:36.390" Score="27" ViewCount="22418" Body="&lt;p&gt;I made a sketch, but then I lost it. However, I uploaded it to the Arduino before losing it. Is there any way I can get it back?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="37" LastEditDate="2014-03-04T12:31:52.697" LastActivityDate="2016-01-12T05:32:46.657" Title="Is there any way to download a sketch from an Arduino?" Tags="&lt;sketch&gt;" AnswerCount="5" CommentCount="2" FavoriteCount="2" />
 <row Id="180" PostTypeId="2" ParentId="179" CreationDate="2014-02-13T21:25:48.473" Score="22" Body="&lt;p&gt;It should be possible as long as the security bit isn't set. This question was asked on EE a while back. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://electronics.stackexchange.com/questions/61079/is-it-possible-to-extract-code-from-an-arduino-board&quot;&gt;Is it possible to extract code from an arduino board?&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But you won't get the Arduino code you wrote back. The code is compiled into assembly and you'll have to convert that back to C yourself.&lt;/p&gt;&#xA;" OwnerUserId="11" LastEditorUserId="46" LastEditDate="2014-04-29T13:56:28.503" LastActivityDate="2014-04-29T13:56:28.503" CommentCount="0" />
  <row Id="181" PostTypeId="2" ParentId="179" CreationDate="2014-02-13T21:34:32.477" Score="1" Body="&lt;p&gt;You can download the hex dump of the file, but there is no easy way to get all the C++ code and comments. If you can understand assembly, you could recreate the program, but that would take a while. There are dissasemblers available for some devices, i don't know about arduino.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-13T21:34:32.477" CommentCount="2" />
  <row Id="182" PostTypeId="1" CreationDate="2014-02-13T22:32:43.623" Score="12" ViewCount="2729" Body="&lt;p&gt;I'm planning an Arduino system that consists of several Arduino boards. The maximum distance between the boards is about 50 meters. I want to send basic data between these, like short strings or integers. I know I could send data through ethernet cables but that requires an ethernet shield or the Arduino Ethernet board that doubles the costs. Is there a low budget way I could connect the boards using only the most basic boards (like Uno) and some other components but not a full shield?&lt;/p&gt;&#xA;" OwnerUserId="87" LastActivityDate="2015-04-29T11:52:23.243" Title="How to connect two Arduino without shields?" Tags="&lt;arduino-uno&gt;&lt;networking&gt;&lt;system-design&gt;" AnswerCount="5" CommentCount="3" />
  <row Id="183" PostTypeId="2" ParentId="182" CreationDate="2014-02-13T22:42:53.227" Score="6" Body="&lt;p&gt;There are two categories i can think of to classify comminucation features of the Arduino boards:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Between 2 devices:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Serial: Easy to use and only requires 2 data lines.&lt;/li&gt;&#xA;&lt;li&gt;OneWire: Harder to use and slow, but uses only one data line&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Between more than 2 devices&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I2C: You can have up to 128 devices on a network, individually addressable, but requires a master device, uses 2 data lines. this is know also as Wire.&lt;/li&gt;&#xA;&lt;li&gt;SPI: difficult to use, but very fast and easy device selection. uses a lot of data lines (3 + num of devices)&lt;/li&gt;&#xA;&lt;li&gt;OneWire: using addressed oneWire is even slower than regular oneWire, still only one data line&lt;/li&gt;&#xA;&lt;li&gt;SoftwareSerial: You can have several devices connected by different Serial lines, but it is slower.&lt;/li&gt;&#xA;&lt;li&gt;CAN: only available on the Due, and addressable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;There are other methods available, but these listed only require a minimum of external hardware.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For distance ratings, see &lt;a href=&quot;http://forum.arduino.cc/index.php?topic=82937.0&quot; rel=&quot;nofollow&quot;&gt;http://forum.arduino.cc/index.php?topic=82937.0&lt;/a&gt; and &lt;a href=&quot;http://www.tldp.org/HOWTO/Remote-Serial-Console-HOWTO/serial-distance.html&quot; rel=&quot;nofollow&quot;&gt;http://www.tldp.org/HOWTO/Remote-Serial-Console-HOWTO/serial-distance.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;These data rates are directly controlled in Serial and can be tweaked in many others.&lt;/p&gt;&#xA;" OwnerUserId="8" LastEditorUserId="8" LastEditDate="2014-02-13T23:09:49.190" LastActivityDate="2014-02-13T23:09:49.190" CommentCount="0" />
  <row Id="184" PostTypeId="2" ParentId="182" CreationDate="2014-02-13T22:59:03.273" Score="8" Body="&lt;p&gt;For long distance wired communication, look at &lt;a href=&quot;http://en.wikipedia.org/wiki/RS-485&quot;&gt;RS-485&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Since it uses a differential balanced line over twisted pair (like&#xA;  RS-422), it can span relatively large distances (up to 4,000 feet&#xA;  (1,200 m)). A rule of thumb is that the speed in bit/s multiplied by&#xA;  the length in meters should not exceed 108. Thus a 50 meter cable&#xA;  should not signal faster than 2 Mbit/s&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;You can use the MAX485 chip. It's pretty easy to work with but there's a good library as well:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/Protoneer/RS485-Arduino-Library&quot;&gt;https://github.com/Protoneer/RS485-Arduino-Library&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-13T22:59:03.273" CommentCount="3" />
  <row Id="185" PostTypeId="2" ParentId="182" CreationDate="2014-02-13T23:01:48.250" Score="4" Body="&lt;p&gt;Freakduino makes some Arduino boards with built in wireless. Their long range wireless is 900 MHz and their shorter range is 2.4GHz. I think they are actually XBee radios and for programming you would use a library called chibiArduino, which is available (and documented) on the Freakduino website. When communicating wirelessly with another radio you can use Broadcast or specify a radio by it's ID which is a value you need to set in the EEPROM of the Freakduino.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Taken directly from the Freakduino site:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The addition of an integrated wireless radio based on the IEEE 802.15.4 protocol (same radio protocol as the XBee) allows for wireless control of devices or wireless sensor data collection. Optional battery circuitry was added so that it could function as a true wireless node without any external power cables. The board is also designed to fit a ruggedized enclosure so that the design can be transported safely or deployed in an actual usage scenario without worrying about damaging the circuitry.&lt;/p&gt;&#xA;  &#xA;  &lt;p&gt;This 900 MHz radio is a personal favorite of mine. I use it all the time because 900 MHz offers much better range compared to 2.4 GHz. The radio can output up to 10 mW of transmit power which can get a surprising amount of range. With direct line of sight, a few hundred meters would not be surprising. If additional range is needed, the modulation mode can also be changed from OQPSK to BPSK. This results in additional range at the expense of data rate, with the max going from 250 kbps to 40 kbps in standard mode. &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;" OwnerUserId="69" LastEditorUserId="69" LastEditDate="2014-02-13T23:12:28.980" LastActivityDate="2014-02-13T23:12:28.980" CommentCount="0" />
  <row Id="186" PostTypeId="1" CreationDate="2014-02-14T01:01:04.640" Score="7" ViewCount="775" Body="&lt;p&gt;I have a push button wired to my Arduino but it seems to be triggering randomly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have one pin of the button connected to pin 2 on the arduino and the other connected to ground.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;    Serial.begin(9600);&#xA;&#xA;    pinMode(2, INPUT);&#xA;}&#xA;&#xA;void loop() {&#xA;    Serial.println(digitalRead(2));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I expect it to print 1 continuously and go to 0 when I press the button down but sometimes it shows 0 even when I don't touch it.&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-14T01:01:04.640" Title="Button state changing randomly" Tags="&lt;button&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="187" PostTypeId="2" ParentId="186" CreationDate="2014-02-14T01:01:04.640" Score="9" Body="&lt;p&gt;When a button is connected in that configuration, the input is what's called &lt;em&gt;floating&lt;/em&gt;, meaning it's not a 0 or a 1. When the button is pressed, it is connected to ground, so that's definitely a 0, but when it's not pressed down, we don't know the value of the pin.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Pull Up Resistor&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;We need to include what's called a &quot;pull-up&quot; resistor to pull the signal up to a logic 1 when the button is not pressed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/h9oX1.jpg&quot; alt=&quot;pull up resistor&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://learn.sparkfun.com/tutorials/pull-up-resistors/what-is-a-pull-up-resistor&quot;&gt;Image from Sparkfun&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;What this means is when the button is not pressed, the Arduino reads a logic 1. When the button is pressed, the current flows through the resistor to ground and the Arduino reads a logic 0.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Internal Pull Up Resistor&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The Arduino also has internal pull up resistors so you don't necessarily have to add an extra component to your circuit. There are a couple of ways to use this.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You used to have to do it like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pinMode(pin, INPUT);           // set pin to input&#xA;digitalWrite(pin, HIGH);       // turn on pullup resistors&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now we can do it simply in one line:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pinMode(pin, INPUT_PULLUP);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This enables the 20k pull up resistor on that pin. The input will no longer be floating when the button is not pressed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only works when the other end is connected to ground.&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-14T01:01:04.640" CommentCount="1" />
  <row Id="188" PostTypeId="1" AcceptedAnswerId="200" CreationDate="2014-02-14T01:28:32.887" Score="13" ViewCount="11838" Body="&lt;p&gt;In either of &lt;code&gt;setup&lt;/code&gt; or &lt;code&gt;loop&lt;/code&gt;, if I were to add an &lt;code&gt;exit(0)&lt;/code&gt; call, where would control be passed to? What would the next state of the microcontroller be? Would it stop execution and power down?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am using a revision 2 Arduino Uno.&lt;/p&gt;&#xA;" OwnerUserId="65" LastEditorUserId="220" LastEditDate="2014-02-25T06:34:23.437" LastActivityDate="2014-04-19T18:09:25.697" Title="What happens when I call exit() from my program?" Tags="&lt;programming&gt;&lt;arduino-uno&gt;" AnswerCount="2" CommentCount="2" FavoriteCount="1" />
  <row Id="189" PostTypeId="1" AcceptedAnswerId="215" CreationDate="2014-02-14T01:33:03.127" Score="14" ViewCount="2885" Body="&lt;p&gt;What happens if there is a runtime error in a program? Will execution of the program just stop? Is there some way I get get the Arduino to tell me what the error is?&lt;/p&gt;&#xA;" OwnerUserId="37" LastEditorUserId="220" LastEditDate="2014-02-23T15:57:02.347" LastActivityDate="2014-03-27T03:29:58.047" Title="What happens if there is a runtime error?" Tags="&lt;sketch&gt;" AnswerCount="5" CommentCount="0" FavoriteCount="2" />
  <row Id="190" PostTypeId="2" ParentId="188" CreationDate="2014-02-14T01:42:56.427" Score="8" Body="&lt;p&gt;Well I just tested it with my Arduino Uno and it just completely stopped the code and left all the outputs as they were when the code stopped running (so it left an LED I had on on). There seems to not be a IO cleanup when you call exit. This was what I expected because the Arduino IDE provides the setup and loop functions, if you program the ATMEGA*28 with with any other AVR IDE you start with the main function like all C/C++ programs. The setup and loop functions are not standard on AVR MCU's.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The press of the reset button restarts the code, if you were wondering.&lt;/p&gt;&#xA;" OwnerUserId="10" LastEditorUserId="10" LastEditDate="2014-02-14T01:48:26.633" LastActivityDate="2014-02-14T01:48:26.633" CommentCount="2" />
  <row Id="191" PostTypeId="2" ParentId="189" CreationDate="2014-02-14T01:47:13.680" Score="5" Body="&lt;p&gt;You'd need a hardware debugger for something like this. But usually you'll see the program not behaving as you expect it to and will have to look at that section of the code to identify the problem.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A common/quick/easy way to do this is to add print statements to print out the values of variables or just anything so you know the program gets to that point in the code without a problem. This will help you isolate the problem further.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I believe &lt;a href=&quot;http://www.visualmicro.com/&quot;&gt;VisualMicro&lt;/a&gt; has some debugging functionality built in.&lt;/p&gt;&#xA;" OwnerUserId="11" LastActivityDate="2014-02-14T01:47:13.680" CommentCount="0" />
  <row Id="192" PostTypeId="2" ParentId="189" CreationDate="2014-02-14T01:50:31.773" Score="3" Body="&lt;p&gt;I would assume the AVR CPU doesn't have any error detection or recovery tools. It may just stop, or keep going ignoring the error and the consequences. Like sachleen said, you should add some debug statements in your program that print out data in the middle of an operation, to test if it's working. If you use an emulaor and set breakpoints, you could easily find a problem.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-14T01:50:31.773" CommentCount="0" />
  <row Id="193" PostTypeId="1" CreationDate="2014-02-14T01:59:18.783" Score="8" ViewCount="3406" Body="&lt;p&gt;I want to make a sketch that is as small as possible, for test purposes. The problem is, when i compile the BareMinimum sketch (with an empty setup and loop), i get 466 bytes for the Uno and a whopping 4,242 for the Leonardo. Is there any way to write your own code that has no extra functions (namely Timer0 for &lt;code&gt;millis()&lt;/code&gt; and &lt;code&gt;delay()&lt;/code&gt;). I would also like to be able to disable the keyboard/mouse functions for the Leonardo.&lt;/p&gt;&#xA;" OwnerUserId="8" LastEditorUserId="220" LastEditDate="2014-03-18T23:35:56.863" LastActivityDate="2015-06-15T14:00:52.420" Title="How to really shrink a sketch" Tags="&lt;programming&gt;&lt;sketch&gt;&lt;arduino-leonardo&gt;" AnswerCount="4" CommentCount="3" FavoriteCount="2" />
  <row Id="196" PostTypeId="1" CreationDate="2014-02-14T03:01:47.440" Score="0" ViewCount="2132" Body="&lt;p&gt;There are several different types in the Arduino programming language. They each have different applications that can use up the limited RAM in the Arduino. When should i use each?&lt;/p&gt;&#xA;" OwnerUserId="8" LastEditorUserId="8" LastEditDate="2014-02-14T14:21:28.193" LastActivityDate="2014-02-14T14:21:28.193" Title="When to use different variable types?" Tags="&lt;programming&gt;&lt;variables&gt;" AnswerCount="2" CommentCount="9" ClosedDate="2014-02-14T12:30:47.000" />
  <row Id="197" PostTypeId="2" ParentId="196" CreationDate="2014-02-14T03:01:47.440" Score="3" Body="&lt;p&gt;An overview of the most commonly used variables:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;byte&lt;/strong&gt;: uses one byte (8 bits), holds numbers from 0 to 255&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;char&lt;/strong&gt;: a signed byte&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;boolean&lt;/strong&gt;: uses 1 byte, but only holds a value of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;int&lt;/strong&gt;: uses 2 bytes, holds numbers from -32768 to 32767, mostly used in general programming. an &lt;code&gt;int&lt;/code&gt; is what is known as a signed variable, where the last bit controls if it is negative or positive&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;long&lt;/strong&gt;: uses 4 bytes, holds numbers from -2147483647 to 217283648, it is also signed&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;long long&lt;/strong&gt;: uses 8 bytes, can hold -9223372036854775808 to 9223372036854775807, signed&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;float&lt;/strong&gt;: uses 4 bytes, holds decimals from -3.4028235E+38 to 3.4028235E+38.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;double&lt;/strong&gt;: almost identical to &lt;code&gt;float&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;: an array of chars that represent text&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: not to be confused with &lt;code&gt;string&lt;/code&gt;, this is a class that holds text data with extra &lt;a href=&quot;http://arduino.cc/en/Reference/StringObject&quot; rel=&quot;nofollow&quot;&gt;functions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Most variable declarations can be prefixed with &lt;code&gt;signed&lt;/code&gt; or &lt;code&gt;unsigned&lt;/code&gt; to change the function of the sigh bit. For example, &lt;code&gt;unsigned int x = 0;&lt;/code&gt; would create a variable that holds numbers from 0 to 65535 because the sign bit is used as an extra data bit.&lt;/p&gt;&#xA;" OwnerUserId="8" LastActivityDate="2014-02-14T03:01:47.440" CommentCount="1" />
  <row Id="198" PostTypeId="2" ParentId="193" CreationDate="2014-02-14T03:27:43.943" Score="3" Body="&lt;p&gt;You should be able to create your own board definition with a custom boards.txt file as per &lt;a href=&quot;https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5---3rd-party-Hardware-specification&quot; rel=&quot;nofollow&quot;&gt;https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5---3rd-party-Hardware-specification&lt;/a&gt;. As I see there are several usb features in the leonardo's definition. I would hope that the compiles inclusion of the 4K is based off of these flags and not the processor type.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Where the boards.txt would use the upload, bootloader sections from the Leonardo and the build from the uno.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is all assuming the core library build does not use processor specific flags to include USB functions.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;If you get such working. post back, I am sure others would be interested in such.&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;I recently ran into this 4K used limitation on a library demo that actually maxed out the UNO and had to put in a&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#if !defined(__AVR_ATmega32U4__)&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;around a large chunk of extra features in the sketch to fit on the Leonardo.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I had assume (wrong) that this 4K was because I still included Serial.print which when over the USB's CDC on the Leo. But I see after a memory dump of an empty sketch they are still there.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;C:\Users\mflaga\AppData\Local\Temp\build8958339595868119500.tmp&amp;gt;avr-objdump -d sketch_feb13a.cpp.elf &amp;gt; sketch_feb13a.cpp.elf.lst&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Which makes sense. As the Leonardo still requires the USB-CDC client (the 4K) as to detect the 1200 Baud connect from AVR-DUDE as to stroke the remote reboot.&lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;Hence making a custom boards.txt without USB in the build, also needs to have&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;leonardo.upload.use_1200bps_touch=true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;removed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once loaded on the target, this would require the upload to be synchronized with a manual reset of the target. As the ability to remote reboot is lost.&lt;/p&gt;&#xA;" OwnerUserId="60" LastEditorUserId="60" LastEditDate="2014-02-14T14:51:46.077" LastActivityDate="2014-02-14T14:51:46.077" CommentCount="1" />
  <row Id="199" PostTypeId="2" ParentId="196" CreationDate="2014-02-14T03:47:50.560" Score="5" Body="&lt;p&gt;One should appreciate that the Arduino is an Embedded Processor. &lt;em&gt;Specifically that it has limited resources of RAM and ROM(aka Flash/program space).&lt;/em&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Often is the case I see coding use the &quot;int&quot; defaultly. Almost sloppily. If that works great.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;BUT!!!!&#xA;You can run out of room REAL FAST with only 2K of RAM.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would recommend that you size down your type to the minimum of what it needs to be describing it. One also gets a better understanding of what it really is and its limitations. There is no need for an array of int(16bits) from bytes that were recieved from the SPI, UART or I2C. Or a matrix of RGB's that consume 3 bytes each, being int's. You cut your capacity in half.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The pro/con: PRO: using default int everywhere makes it more inter changeable. The CON is that such interchangeability can lead to unintentional casting errors. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would also recommend using C99 type def's which can be found at &quot;avr_stdint.html&quot;&gt;http://www.nongnu.org/avr-libc/user-manual/group_&lt;em&gt;avr&lt;/em&gt;_stdint.html&quot; and elsewhere. It makes things vivid, regards to this aspect. Hence a &quot;int&quot; would be a &quot;int16_t&quot;, &quot;unsigned long&quot; be &quot;uint32_t&quot; etc...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is worth knowing that in some cases a byte or char can not be replaced with int8_t, as such when used with string array functions. But they are still just as vivid.&lt;/p&gt;&#xA;" OwnerUserId="60" LastActivityDate="2014-02-14T03:47:50.560" CommentCount="4" />
  <row Id="200" PostTypeId="2" ParentId="188" CreationDate="2014-02-14T04:00:10.480" Score="11" Body="&lt;p&gt;My initial guess is wrong. I would have thought it would simply return from loop and the core library would just call loop() again. However, I see the following code was created. Noticing that __stop_program is a hard loop...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;An extract of Blink.ino's listing, with exit(0) added:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// the loop routine runs over and over again forever:&#xA;void loop() {&#xA;  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)&#xA;  delay(1000);               // wait for a second&#xA;  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW&#xA;  delay(1000);               // wait for a second&#xA;  exit(0);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The disassembly of the above:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// the loop routine runs over and over again forever:&#xA;void loop() {&#xA;  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)&#xA; 100:   80 91 00 01     lds r24, 0x0100&#xA; 104:   61 e0           ldi r22, 0x01   ; 1&#xA; 106:   0e 94 ca 01     call    0x394   ; 0x394 &amp;lt;digitalWrite&amp;gt;&#xA;  delay(1000);               // wait for a second&#xA; 10a:   68 ee           ldi r22, 0xE8   ; 232&#xA; 10c:   73 e0           ldi r23, 0x03   ; 3&#xA; 10e:   80 e0           ldi r24, 0x00   ; 0&#xA; 110:   90 e0           ldi r25, 0x00   ; 0&#xA; 112:   0e 94 f7 00     call    0x1ee   ; 0x1ee &amp;lt;delay&amp;gt;&#xA;  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW&#xA; 116:   80 91 00 01     lds r24, 0x0100&#xA; 11a:   60 e0           ldi r22, 0x00   ; 0&#xA; 11c:   0e 94 ca 01     call    0x394   ; 0x394 &amp;lt;digitalWrite&amp;gt;&#xA;  delay(1000);               // wait for a second&#xA; 120:   68 ee           ldi r22, 0xE8   ; 232&#xA; 122:   73 e0           ldi r23, 0x03   ; 3&#xA; 124:   80 e0           ldi r24, 0x00   ; 0&#xA; 126:   90 e0           ldi r25, 0x00   ; 0&#xA; 128:   0e 94 f7 00     call    0x1ee   ; 0x1ee &amp;lt;delay&amp;gt;&#xA;  exit(0);&#xA; 12c:   80 e0           ldi r24, 0x00   ; 0&#xA; 12e:   90 e0           ldi r25, 0x00   ; 0&#xA; 130:   0e 94 1e 02     call    0x43c   ; 0x43c &amp;lt;_exit&amp;gt;&#xA;&#xA;...&#xA;&#xA;0000043c &amp;lt;_exit&amp;gt;:&#xA; 43c:   f8 94           cli&#xA;&#xA;0000043e &amp;lt;__stop_program&amp;gt;:&#xA; 43e:   ff cf           rjmp    .-2         ; 0x43e &amp;lt;__stop_program&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Note that if _exit had not called cli, interrupts would be able to do stuff. But that is not the case.&lt;/p&gt;&#xA;" OwnerUserId="60" LastEditorUserId="86" LastEditDate="2014-02-17T04:26:53.973" LastActivityDate="2014-02-17T04:26:53.973" CommentCount="4" />
<row Id="14139" PostTypeId="1" AcceptedAnswerId="14148" CreationDate="2015-08-13T03:03:30.507" Score="0" ViewCount="42" Body="&lt;p&gt;My code is designed to play a tone when ever pin 3 is high on my Arduino. When I am examine the pins voltage with a multimeter it is always reading below 1 volt. When I examined the voltage off of a osiliscope it is reading the voltage pretty steady at 0.2 to 0.3. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My multimeter reads at 0.26&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/VDZrq.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/VDZrq.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My code is:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void setup() {&#xA;  // put your setup code here, to run once:&#xA;Serial.begin(9600);&#xA;}&#xA;void loop() {&#xA;  // put your main code here, to run repeatedly:&#xA;int input = digitalRead(3);&#xA;Serial.println(input);&#xA;if(input == 1){&#xA;  tone(A5,4000);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;My board looks like:&lt;/strong&gt;&#xA;&lt;a href=&quot;http://i.stack.imgur.com/WxcKw.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/WxcKw.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;The bottom of the board looks like:&lt;/strong&gt;&#xA;&lt;a href=&quot;http://i.stack.imgur.com/VmlpH.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/VmlpH.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="8167" LastActivityDate="2015-08-13T08:23:33.317" Title="Arduino LED lighting up when signal is reading low on multimeter" Tags="&lt;sketch&gt;&lt;arduino-pro-mini&gt;&lt;signal-processing&gt;&lt;prototype&gt;" AnswerCount="1" CommentCount="1" />
  <row Id="14140" PostTypeId="2" ParentId="1569" CreationDate="2015-08-13T03:46:55.780" Score="-2" Body="&lt;p&gt;It specifies the program to work inside the computer system .The numbers specify the speed.Serial.print specifies what text is going to be displayed&lt;/p&gt;&#xA;" OwnerUserId="11766" LastActivityDate="2015-08-13T03:46:55.780" CommentCount="1" />
  <row Id="14141" PostTypeId="2" ParentId="14138" CreationDate="2015-08-13T05:04:29.767" Score="0" Body="&#xA;&#xA;&lt;p&gt;If you have just connected a switch to the Arduino pin, like the image below, it will just return &quot;random&quot; undefined results:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/dbixU.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/dbixU.png&quot; alt=&quot;Floating input on switch&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are various ways of avoiding this, including using a pull-down resistor to ensure that, if the switch is open, it will read LOW. For example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://i.stack.imgur.com/eYepo.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/eYepo.png&quot; alt=&quot;Pull-down resistor&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are other possible techniques as discussed on &lt;a href=&quot;http://gammon.com.au/switches&quot; rel=&quot;nofollow&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One is to change:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;   pinMode(inPin, INPUT);//this time we will set the pin as INPUT&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;to:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;   pinMode(inPin, INPUT_PULLUP);//this time we will set the pin as INPUT&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then wire the switch to &lt;strong&gt;ground&lt;/strong&gt;, not +5 V. That way the pull-up resistor pulls the switch HIGH, and when you close the switch it is LOW.&lt;/p&gt;&#xA;" OwnerUserId="10794" LastActivityDate="2015-08-13T05:04:29.767" CommentCount="0" />
  <row Id="14142" PostTypeId="2" ParentId="5178" CreationDate="2015-08-13T05:22:51.097" Score="1" Body="&lt;p&gt;It is highly likely that the sketch you loaded is causing this.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;However, when I press the restart button on the Arduino, the PC will detect it as an Arduino Leonardo bootloader(com 7) but after few seconds it disappears.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;For a few seconds after reset the bootloader will configure the board as a USB serial device, awaiting upload of a new sketch. Once that times out it runs the existing code. If the existing code does not configure the USB port (eg. by doing &lt;code&gt;Serial.begin&lt;/code&gt;) then it will cease to enumerate as a USB device. This is perfectly normal.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The &quot;fix&quot; is to upload a sketch that uses the USB interface. For example, open a serial port, open the keyboard (&lt;code&gt;Keyboard.begin()&lt;/code&gt;) or similar.&lt;/p&gt;&#xA;" OwnerUserId="10794" LastActivityDate="2015-08-13T05:22:51.097" CommentCount="0" />
  <row Id="14150" PostTypeId="2" ParentId="14147" CreationDate="2015-08-13T09:38:32.230" Score="1" Body="&lt;p&gt;under the IDE make sure you have set the correct board and comm port. go to tools&gt;&gt;board then choose your board then tools&gt;&gt;Comm to choose the correct comm port. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;is the IDE saying anything about having problems connecting to the board? &lt;/p&gt;&#xA;&#xA;&lt;p&gt;and no re-installing all drivers should not be necessary. &lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T09:38:32.230" CommentCount="6" />
  <row Id="14151" PostTypeId="2" ParentId="14120" CreationDate="2015-08-13T09:52:48.213" Score="0" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;want to measure the movement of 2 points on a material surface as it is stretched and released the points move apart and towards one another. The points are real and tangible. This of pins in cloth and we want to measure the distance between the pins.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;If the two points can be made then you could use an Ultrasonic range finder. you could have one point be a wall (use balsa wood or something light) then the other could be the range finder. You might have to do a little bit of engineering for attaching the range finder to the pins on the cloth, but I believe it's doable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;heres an amazon link for a generic arduino range finder: &lt;a href=&quot;http://rads.stackoverflow.com/amzn/click/B00F6KLLGG&quot; rel=&quot;nofollow&quot;&gt;http://www.amazon.com/RHX-Ultrasonic-Distance-Measuring-Transducer/dp/B00F6KLLGG/ref=sr_1_2?s=electronics&amp;amp;ie=UTF8&amp;amp;qid=1439459256&amp;amp;sr=1-2&amp;amp;keywords=range+finder+arduino&lt;/a&gt; &lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T09:52:48.213" CommentCount="3" />
  <row Id="14152" PostTypeId="2" ParentId="14106" CreationDate="2015-08-13T10:01:25.767" Score="2" Body="&lt;p&gt;You need to open the .ino file. that is the project file for the Marlin Firmware. then upload that. Also do some research about the settings for Marlin. It isn't just plug and play, you have to enter some information about your individual stepper motors.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://solidutopia.com/marlin-firmware-user-guide-basic/&quot; rel=&quot;nofollow&quot;&gt;http://solidutopia.com/marlin-firmware-user-guide-basic/&lt;/a&gt; - heres a guide for Marlin.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;the cpp and h files are c++ files that are apart of the project. the Arduino IDE cannot open these individually. the .ino file is the project file that will allow you to open up the entire project and not just one portion of it.&lt;/p&gt;&#xA;" OwnerUserId="11676" LastActivityDate="2015-08-13T10:01:25.767" CommentCount="0" />
  <row Id="14153" PostTypeId="1" AcceptedAnswerId="14155" CreationDate="2015-08-13T11:40:34.860" Score="1" ViewCount="53" Body="&lt;p&gt;Looking at my Arduino Uno board, it appears the digital PWM pins are #11, #10, #9, #6, #5 and #3. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;When playing around with the Theremin, it seems that the &lt;code&gt;Tone()&lt;/code&gt; message works on all pins regardless of whether they are marked PWM or not?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can anyone explain what is happening or how this is possible?&lt;/p&gt;&#xA;" OwnerUserId="11775" LastActivityDate="2015-08-13T15:00:50.997" Title="Tone() working on all digital pins?" Tags="&lt;arduino-uno&gt;&lt;pwm&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="14154" PostTypeId="1" CreationDate="2015-08-13T12:00:41.230" Score="0" ViewCount="54" Body="&lt;p&gt;I had an old duemilanove lying around (Which was not working because i accidentially busted the atmega) and I recently bought some atmegas pre-flashed with the UNO bootloader. So I tried to put one of those in it, and it seems to work fine except that I have to select the UNO board in the arduino IDE. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;My question is: Is there anything problematic to be aware of when using the UNO bootloader in an duemilanove?&lt;/p&gt;&#xA;" OwnerUserId="11776" LastEditorUserId="8" LastEditDate="2015-08-13T15:07:13.907" LastActivityDate="2015-08-13T22:29:22.423" Title="Will the Uno bootloader work in the Duemilanove?" Tags="&lt;arduino-uno&gt;&lt;bootloader&gt;&lt;arduino-duemilanove&gt;" AnswerCount="1" CommentCount="0" />
  <row Id="14155" PostTypeId="2" ParentId="14153" CreationDate="2015-08-13T12:07:15.260" Score="2" Body="&lt;p&gt;The Tone library doesn't use the PWM mode timer functions on the atmega, instead it uses an interrupt routine to toggle the pins. You can find the source code for Tone libary here for reference:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/johnmccombs/arduino-libraries/blob/master/Tone/&quot; rel=&quot;nofollow&quot;&gt;https://github.com/johnmccombs/arduino-libraries/blob/master/Tone/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="11776" LastEditorUserId="11776" LastEditDate="2015-08-13T15:00:50.997" LastActivityDate="2015-08-13T15:00:50.997" CommentCount="0" />
  <row Id="14156" PostTypeId="2" ParentId="14154" CreationDate="2015-08-13T13:09:20.803" Score="1" Body="&lt;p&gt;So I researched it a bit, and there does not seem to be any problems with running the UNO bootloader on a Duemilanove board.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The biggest difference between the two seems to be the USB interface: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;USB interface&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Duemilanove uses FTDI, UNO uses another microcontroller (ATmega8u2).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since the USB to serial is transparent for me as an end user for the most parts, it doesn't really matter to me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Leaner bootloader&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The UNO bootloader is smaller than the duemilanove.&lt;/p&gt;&#xA;" OwnerUserId="11776" LastEditorUserId="11754" LastEditDate="2015-08-13T22:29:22.423" LastActivityDate="2015-08-13T22:29:22.423" CommentCount="0" />
  <row Id="14157" PostTypeId="1" AcceptedAnswerId="14164" CreationDate="2015-08-13T13:55:08.927" Score="0" ViewCount="624" Body="&lt;p&gt;I need to pass a class member function to server.on, unfortunately i get an error.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;error: no matching function for call to 'ESP8266WebServer::on&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;I have done some searching but could not understand anything I found. No simple explanation.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This works:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void handleRoot(){}&#xA;server.on(&quot;/&quot;, handleRoot);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This doesn't:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void myClass::handleRoot(){}&#xA;void myClass::setup(){&#xA;    server.on(&quot;/&quot;, handleRoot);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The second argument to server.on is &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;typedef std::function&amp;lt;void(void)&amp;gt; THandlerFunction;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Unfortunately I have no idea what it means.&lt;/p&gt;&#xA;" OwnerUserId="10956" LastEditorUserId="7389" LastEditDate="2015-10-03T18:40:18.347" LastActivityDate="2015-10-03T18:40:18.347" Title="Passing class member function as argument" Tags="&lt;c++&gt;&lt;arduino-ide&gt;&lt;esp8266&gt;" AnswerCount="2" CommentCount="5" />
  <row Id="14158" PostTypeId="2" ParentId="14137" CreationDate="2015-08-13T13:59:27.657" Score="1" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;My RF units are both nrf24l01. I have tried working with the sample&#xA;  code and I think the issue is I don't understand how the unit works&#xA;  well enough.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;https://arduino-info.wikispaces.com/Nrf24L01-2.4GHz-HowTo&quot; rel=&quot;nofollow&quot;&gt;Start here, this is the absolutely best resource&lt;/a&gt; I could find. I use MIRF libary and there are &lt;a href=&quot;https://arduino-info.wikispaces.com/nRF24L01-Mirf-Examples&quot; rel=&quot;nofollow&quot;&gt;send and receive examples&lt;/a&gt;.  They are really, really simple. Get them working first.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What is the nature of the data sent between units? I want to send&#xA;  integers, possibly even text. Is that possible? Do I need to convert&#xA;  to binary or something?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Technically&lt;/em&gt;, you send between 1 and 32 &lt;em&gt;bytes&lt;/em&gt; of information. However, the libraries (see examples above) will take care of the technicality and allow you to send nums, chars or strings. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;My understanding of &quot;ping&quot; and &quot;pong&quot; is that ping sends a message&#xA;  then pong sends that same message back to ping... is this correct?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Not necessarily. Since &lt;a href=&quot;/questions/tagged/nrf24l01%2b&quot; class=&quot;post-tag&quot; title=&quot;show questions tagged &amp;#39;nrf24l01+&amp;#39;&quot; rel=&quot;tag&quot;&gt;nrf24l01+&lt;/a&gt; does all the signal checking for you, and you know that your TX device is the only one sending, you can just reply with &quot;data received&quot;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Anyways, why are even concerned with this? Pinging and ponging have nothing to do with your task at hand.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Are RF units very different? Is this one particularly difficult?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Yes, they are different in frequencies, protocols, power etc. No, this one isn't. It's an amazing, cheap and robust piece of Norwegian ingenuity.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If I just want to send with one receive with the other shouldn't this&#xA;  simplify the code?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Simplify compared to what exactly? It will simplify the code compared to a two-way communication, obviously.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;What are pipes? How many can I open?&#xA;  As someone said before me, read the bloody manual, or a tutorial, or the data sheet, or something. The answer is 6.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Any unit can send on ONE pipe and receive on SIX pipes. Imagine having 6 phones on your table. You can simultaneously listen to all 6 phones but you can only TALK INTO ONE. You can choose which one to talk into to, at any point. Unless you have a lot of devices talking to each other (more than TWO), don't bother, forget the pipes.&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;If I have 3 or more of these what changes will I need to make to the&#xA;  code?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Get two Arduinos talking to each other first. No one has succeeded at making anything work by getting ahead of themselves.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now here is &lt;a href=&quot;https://www.youtube.com/watch?v=plDPBVjcckw&quot; rel=&quot;nofollow&quot;&gt;a video of two Arduinos talking&lt;/a&gt;. There's only one button but you can easily change it to a 20-button setup.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The code for sending:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;#include &amp;lt;SPI.h&amp;gt;&#xA;#include &amp;lt;Mirf.h&amp;gt;&#xA;#include &amp;lt;MirfHardwareSpiDriver.h&amp;gt;&#xA;#include &amp;lt;MirfSpiDriver.h&amp;gt;&#xA;#include &amp;lt;nRF24L01.h&amp;gt;&#xA;&#xA;const int buttonPin = 2;   &#xA;const int ledPin =  3;&#xA;&#xA;// sends a string via the nRF24L01&#xA;void transmit(const char *string)&#xA;{&#xA;  byte c; &#xA;&#xA;  for( int i=0 ; string[i]!=0x00 ; i++ )&#xA;  { &#xA;    c = string[i];&#xA;    Mirf.send(&amp;amp;c);&#xA;    while( Mirf.isSending() ) ;&#xA;  }&#xA;}&#xA;&#xA;void setup() {&#xA;  //RADIO&#xA;  Serial.begin(9600);&#xA;  Mirf.spi = &amp;amp;MirfHardwareSpi;&#xA;  Mirf.init();&#xA;  Mirf.payload = 1;&#xA;  Mirf.channel = 90;&#xA;  Mirf.config();&#xA;  Mirf.configRegister(RF_SETUP,0x06);&#xA;  Mirf.setTADDR((byte *)&quot;serv1&quot;);&#xA;&#xA;  //BUTTON AND LED&#xA;  pinMode(buttonPin, INPUT_PULLUP);&#xA;  pinMode(ledPin, OUTPUT);&#xA;&#xA;  Serial.println(&quot;Sending ... &quot;);   &#xA;}&#xA;&#xA;void loop() {&#xA;  int buttonState = digitalRead(buttonPin);&#xA;   if (buttonState == LOW) { //pressed&#xA;    digitalWrite(ledPin, HIGH);&#xA;    transmit(&quot;X&quot;);&#xA;  }&#xA;  else {&#xA;    digitalWrite(ledPin, LOW);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The code for receiving:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-C++ prettyprint-override&quot;&gt;&lt;code&gt;#include &amp;lt;SPI.h&amp;gt;&#xA;#include &amp;lt;Mirf.h&amp;gt;&#xA;#include &amp;lt;MirfHardwareSpiDriver.h&amp;gt;&#xA;#include &amp;lt;MirfSpiDriver.h&amp;gt;&#xA;#include &amp;lt;nRF24L01.h&amp;gt;&#xA;&#xA;unsigned long lasttime;&#xA;unsigned long delaytime;&#xA;unsigned long time;&#xA;const int ledPin = 3;&#xA;&#xA;void setup(){&#xA;  Serial.begin(9600);&#xA;&#xA;  //RADIO  &#xA;  Mirf.spi = &amp;amp;MirfHardwareSpi;&#xA;  Mirf.init();&#xA;  Mirf.setRADDR((byte *)&quot;serv1&quot;); &#xA;  Mirf.payload = 1;&#xA;  Mirf.channel = 90;&#xA;  Mirf.config();&#xA;  Mirf.configRegister(RF_SETUP,0x06);&#xA;&#xA;  //LED &#xA;  pinMode(ledPin, OUTPUT);&#xA;  digitalWrite(ledPin, HIGH);   &#xA;  Serial.println(&quot;Listening ... &quot;);&#xA;}&#xA;&#xA;void loop() {&#xA;  byte c;&#xA;&#xA;  if( Mirf.dataReady() ) {&#xA;    Mirf.getData(&amp;amp;c);&#xA;    Serial.write(c);&#xA;&#xA;    if (c == 'X') {&#xA;      digitalWrite(ledPin, HIGH);    &#xA;    }&#xA;  } else {&#xA;      digitalWrite(ledPin, LOW);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="10837" LastEditorUserId="10794" LastEditDate="2015-08-16T01:20:14.380" LastActivityDate="2015-08-16T01:20:14.380" CommentCount="0" />
  <row Id="14164" PostTypeId="2" ParentId="14157" CreationDate="2015-08-13T16:41:25.520" Score="1" Body="&lt;p&gt;It's quite common question related to C++ programming.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The extensive explanation can be found &lt;a href=&quot;http://www.parashift.com/c++-faq/pointers-to-members.html&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The short answer is: it's very different from taking the address of a regular function.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Workarounds (that might or might not work for you, depending on what else you need that function to do) are:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;make it static&lt;/li&gt;&#xA;&lt;li&gt;declare it as friend function, rather than member function&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Either way, the point is that it should not be something associated to an instance of the class, but rather to the class as a whole.&lt;/p&gt;&#xA;" OwnerUserId="7856" LastActivityDate="2015-08-13T16:41:25.520" CommentCount="1" />
  <row Id="14165" PostTypeId="1" CreationDate="2015-08-13T17:24:38.197" Score="1" ViewCount="56" Body="&lt;p&gt;I am trying to find cheap options for displays about 3 x 6 inches to display time, weather, simple clip-art type images, and other marquee messages.  What are my best options to work with arduino if my goal is cost-cutting?&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2&quot; x 4&quot; or greater in size&lt;/li&gt;&#xA;&lt;li&gt;40 dpi minimum&lt;/li&gt;&#xA;&lt;li&gt;readable from 15 feet in normal indoor conditions&lt;/li&gt;&#xA;&lt;li&gt;everything else is unimportant to me at this point: RGB, pitch, power draw, etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="8451" LastEditorUserId="8451" LastEditDate="2015-08-13T18:37:55.620" LastActivityDate="2015-08-14T00:38:09.920" Title="Solutions for displays?" Tags="&lt;lcd&gt;&lt;display&gt;&lt;components&gt;" AnswerCount="3" CommentCount="2" />
  <row Id="14166" PostTypeId="2" ParentId="14165" CreationDate="2015-08-13T17:39:02.760" Score="1" Body="&lt;p&gt;www.aliexpress.com would be your first go for cheap stuff. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can always chat with the guys and bargain a bit on the price. Do remember that the free shipping option means that it will take nearly a month to arrive&lt;/p&gt;&#xA;" OwnerUserId="11754" LastActivityDate="2015-08-13T17:39:02.760" CommentCount="0" />
  <row Id="14167" PostTypeId="2" ParentId="14163" CreationDate="2015-08-13T17:41:47.277" Score="2" Body="&lt;p&gt;HID's generally are input devices to your computer, if you do want your computer to send data to the device you will need an application to do it. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;So your best bet is to have a windows app to communicate with your arduino using a virtual com port ( as it does already) and send data as you require&lt;/p&gt;&#xA;" OwnerUserId="11754" LastActivityDate="2015-08-13T17:41:47.277" CommentCount="16" />
  <row Id="14168" PostTypeId="2" ParentId="14044" CreationDate="2015-08-13T18:14:33.040" Score="1" Body="&lt;p&gt;Since you have mentioned that all that you want your friend to do is enter the WiFi SSID and password, I am gonna assume that its where his interaction with the device ends. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In this case, I would recommend using the arduino YUN, it cant get simpler than that. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The YUN is capable of creating an AP network, your friend can connect to it and then go to the arduino home page and then connect to his WiFi. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option would be to use a matrix keypad and LCD screen and have your friend manually enter the details&lt;/p&gt;&#xA;" OwnerUserId="11754" LastEditorUserId="11754" LastEditDate="2015-08-13T18:19:38.383" LastActivityDate="2015-08-13T18:19:38.383" CommentCount="3" />
  <row Id="14169" PostTypeId="2" ParentId="14031" CreationDate="2015-08-13T19:01:26.387" Score="1" Body="&lt;p&gt;After reading the datasheet on the PS manual, I found out that the INT1 pulse had a width of 50uS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what I simply did was to declare a global integer and check it at the end of the loop.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Whenever I checked the incremented variable at the end, it was 48!.I personally suspected that my loop speed was to slow. Additionally the timeout value 14 ms per loop arbitrary. Clearly a disparity exists in the interrupt routine for the sensor and the microcontroller.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what I simply did was to reconfigure the sensor output to a latched signal which clearly solved the problem. I am now getting synchronized interrupt with convincing results.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is the code:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#include &quot;Wire.h&quot;    &#xA;#include &quot;I2Cdev.h&quot;&#xA;#include &quot;MPU9150.h&quot;&#xA;#include &quot;helper_3dmath.h&quot;&#xA;&#xA;#define LED_BUILTIN 13&#xA;&#xA;MPU9150 accelGyroMag; &#xA;&#xA;volatile boolean state_fifo_int = false;&#xA;int x = 0;&#xA;&#xA;void blink(uint16_t offTime, uint16_t onTime){&#xA;digitalWrite(LED_BUILTIN,HIGH);&#xA;if(onTime) delay(onTime);&#xA;digitalWrite(LED_BUILTIN,LOW);&#xA;if(offTime) delay(offTime);&#xA;}&#xA;&#xA;void resetSensor(){&#xA;  accelGyroMag.reset();&#xA;  delay(50);&#xA;  accelGyroMag.initialize();&#xA;  //Serial.println(&quot;Initialize if connection test failed&quot;);&#xA;&#xA;  if(accelGyroMag.testConnection()){ //disable interrupts&#xA;     accelGyroMag.setIntFIFOBufferOverflowEnabled(false);&#xA;     // disable fifo_interrupt&#xA;     accelGyroMag.resetFIFO();&#xA;        // verify connection&#xA;&#xA;     //Serial.println(&quot;Connection tested successfully, Disabling interrupts&quot;);&#xA;     }&#xA;if(!accelGyroMag.testConnection()){ // try to recover sensor&#xA;  accelGyroMag.initialize();&#xA;    //Serial.println(&quot;Initialize if connection test failed&quot;);&#xA;  }&#xA;if(accelGyroMag.testConnection()){  // reconfigure sensor for Fifo and interrupts&#xA;&#xA;   accelGyroMag.setFIFOEnabled(true);&#xA;   accelGyroMag.setXGyroFIFOEnabled(true);&#xA;   accelGyroMag.setAccelFIFOEnabled(true);&#xA;   accelGyroMag.setInterruptMode(false);// Set interrupt logic level mode 0 = active-high&#xA;   accelGyroMag.setInterruptLatch(true); //set interrupt 1=latch-until-int-cleared ( latch after INT_STATUS READ)&#xA;   accelGyroMag.setIntFIFOBufferOverflowEnabled(true);&#xA;&#xA;   }&#xA;else {&#xA; // Serial.println(&quot;MPU9150 connection failed&quot;);&#xA;  //Serial.println(&quot;locking UP&quot;);&#xA;  while(true){&#xA;     for(uint8_t i=0;i&amp;lt;3;i++){blink(50,100);} // S&#xA;     delay(250);&#xA;     for(uint8_t i=0;i&amp;lt;3;i++){blink(50,300);} // O&#xA;     delay(250);&#xA;     for(uint8_t i=0;i&amp;lt;3;i++){blink(50,100);} // S&#xA;     delay(500);&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;void setup(){&#xA;  Wire.begin();    &#xA;  Serial.begin(115200);&#xA;  pinMode(LED_BUILTIN, OUTPUT);&#xA;// other stuff&#xA;  attachInterrupt(0,fifo_int,RISING);&#xA;  resetSensor();&#xA;}&#xA;&#xA;void fifo_int() {&#xA;  x++;&#xA;  state_fifo_int = true;&#xA;&#xA;}&#xA;&#xA;static unsigned long timeout = 0; // used to detect dead sensor/connection&#xA;uint16_t fifo_count;&#xA;uint8_t fifo_buffer[8];&#xA;int16_t acc_temp[3];&#xA;int16_t gyro_x;&#xA;&#xA;void loop(){&#xA;&#xA;  if(state_fifo_int){ // interrupt has triggered&#xA;    blink(0,1);  // really quick blink // really quick blink&#xA;    //Serial.println(x);&#xA;    state_fifo_int = false;&#xA;    accelGyroMag.resetFIFO();&#xA;    accelGyroMag.getFIFOBytes(fifo_buffer,8); // fill in fifo bytes&#xA;    accelGyroMag.getIntFIFOBufferOverflowStatus(); // read the INT_STATUS reg in order to clear the Latch. &#xA;    acc_temp[0] = (((int16_t)fifo_buffer[0]) &amp;lt;&amp;lt; 8) | fifo_buffer[1];&#xA;    acc_temp[1] = (((int16_t)fifo_buffer[2]) &amp;lt;&amp;lt; 8) | fifo_buffer[3];&#xA;    acc_temp[2] = (((int16_t)fifo_buffer[4]) &amp;lt;&amp;lt; 8) | fifo_buffer[5];&#xA;    gyro_x = (((int16_t)fifo_buffer[7]) &amp;lt;&amp;lt; 8) | fifo_buffer[8];&#xA;&#xA;    timeout = millis();&#xA;&#xA;  }&#xA;&#xA; if((millis()-timeout)&amp;gt;1000){ //last interrupt was over 1 second ago! better reset Sensor!&#xA;   blink(100,500);&#xA;   blink(100,500);&#xA;&#xA;   resetSensor();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="11433" LastActivityDate="2015-08-13T19:01:26.387" CommentCount="0" />
</posts>
